{"config":{"lang":["zh","en","ja"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to SyncLionPaw's Blog","text":"<p>go\u8bed\u8a00\u3001risc-v\u3001python\u6709\u8da3\u7684\u5e93\u3001\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5</p>"},{"location":"algo/backtrace/%E5%9B%9E%E6%BA%AF%E9%A2%98%E5%8D%95/","title":"\u56de\u6eaf\u7b97\u6cd5\u9898\u5355","text":"<p>[x] \u5b50\u96c6\uff08Leetcode 78\uff09</p> <p>[ ] \u5b50\u96c6 II\uff08Leetcode 90\uff09</p> <p>[ ] \u7ec4\u5408\uff08Leetcode 77\uff09</p> <p>[ ] \u7ec4\u5408\u603b\u548c\uff08Leetcode 39\uff09</p> <p>[ ] \u7ec4\u5408\u603b\u548c II\uff08Leetcode 40\uff09</p> <p>[ ] \u5206\u5272\u56de\u6587\u4e32\uff08Leetcode 131\uff09</p> <p>[ ] \u7535\u8bdd\u53f7\u7801\u7684\u5b57\u6bcd\u7ec4\u5408\uff08Leetcode 17\uff09</p> <p>[ ] \u62ec\u53f7\u751f\u6210\uff08Leetcode 22\uff09</p> <p>[ ] \u6392\u5217\uff08Leetcode 46\uff09</p> <p>[ ] \u6392\u5217 II\uff08Leetcode 47\uff09</p> <p>[ ] N \u7687\u540e\uff08Leetcode 51\uff09</p> <p>[ ] \u89e3\u6570\u72ec\uff08Leetcode 37\uff09</p>"},{"location":"algo/diff/diff/","title":"\u5dee\u5206\u6570\u7ec4","text":""},{"location":"algo/diff/diff/#_2","title":"\u95ee\u9898\u5f15\u5165\uff1a","text":"<p>\u73b0\u5728\u6709\u4e00\u4e2a\u6570\u7ec4 nums [1, 3, 5, 7, 0] \u73b0\u5728\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a2\u7684\u6570\u7ec4a [2, 4] \u8868\u793a\u628a nums \u4ece\u4e0b\u6807 a[0] \u5230 a[1] \u8303\u56f4\u5185\u7684\u5143\u7d20\u90fd\u52a01\u3002 \u6c42\u53d8\u5316\u4e4b\u540e\u7684\u6570\u7ec4\u7684\u5143\u7d20\u3002</p> Python<pre><code>nums = [1, 3, 5, 7, 0]\na = [2, 4]\n\nfor i in range(a[0], a[1]+1):\n    nums[i] += 1\nprint(nums)\n</code></pre>"},{"location":"algo/diff/diff/#_3","title":"\u591a\u6b21\u64cd\u4f5c","text":"<p>\u82e5\u8981\u8fdb\u884c\u591a\u6b21\u64cd\u4f5c\u5462\uff1f \u4f8b\u5982 operators = [[1, 3], [2, 4], [1, 2], [2, 4]]</p> Python<pre><code>operators = [[1, 3], [2, 4], [1, 2], [2, 4]]\n\n\nnums = [1, 3, 5, 7, 0]\n\nfor start, end in operators:\n    for i in range(start, end + 1):\n        nums[i] += 1\n\n\nprint(nums)\n</code></pre> <p>\u82e5\u662f\u9891\u7e41\u4fee\u6539\uff0c\u6bcf\u6b21\u4fee\u6539\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f O(n) \u5219\u4e0d\u53ef\u63a5\u53d7\u3002</p>"},{"location":"algo/diff/diff/#_4","title":"\u89e3\u51b3\u529e\u6cd5","text":"<p>\u5dee\u5206\u6570\u7ec4 \u5148\u6784\u5efa\u4e00\u4e2a\u6570\u7ec4 \u6211\u4eec\u5148\u5bf9 nums \u6570\u7ec4\u6784\u9020\u4e00\u4e2a diff \u5dee\u5206\u6570\u7ec4\uff0cdiff[i] \u5c31\u662f nums[i] \u548c nums[i-1] \u4e4b\u5dee\uff1a Python<pre><code>diff = [0] * len(nums)\n# \u6784\u9020\u5dee\u5206\u6570\u7ec4\ndiff[0] = nums[0]\nfor i in range(1, len(nums)):\n    diff[i] = nums[i] - nums[i - 1]\n</code></pre> \u5dee\u5206\u6570\u7ec4\u7684\u6bcf\u4e00\u9879diff[i] = diff[i] - diff[i-1]</p> <p>\u5dee\u5206\u6570\u7ec4\u7684\u6bcf\u4e00\u9879\uff0c\u90fd\u662f \u6211 \u51cf\u53bb \u6211\u524d\u9762\u7684 \u7684\u5dee\u503c\u3002</p> <p>\u901a\u8fc7\u8fd9\u4e2a diff \u5dee\u5206\u6570\u7ec4\u662f\u53ef\u4ee5\u53cd\u63a8\u51fa\u539f\u59cb\u6570\u7ec4 nums \u7684\uff0c\u4ee3\u7801\u903b\u8f91\u5982\u4e0b\uff1a Python<pre><code>res = [0] * len(diff)\n# \u6839\u636e\u5dee\u5206\u6570\u7ec4\u6784\u9020\u7ed3\u679c\u6570\u7ec4\nres[0] = diff[0]\nfor i in range(1, len(diff)):\n    res[i] = res[i - 1] + diff[i]\n</code></pre> \u6062\u590d\u7684\u65f6\u5019\uff0c\u8bb0\u5f97\u8981\u52a0\u4e0a\u524d\u9762\u7684\u3002</p> <p>\u5982\u679c\u60f3\u5bf9nums\u7684\u533a\u95f4[i..j]\u8fdb\u884c+3\u64cd\u4f5c\uff0c\u5c31\u53ea\u9700\u8981\u8ba9diff[i]+3, \u7136\u540ediff[j+1] -= 3</p> <p>\u539f\u7406\u5f88\u7b80\u5355\uff0c\u56de\u60f3 diff \u6570\u7ec4\u53cd\u63a8 nums \u6570\u7ec4\u7684\u8fc7\u7a0b\uff0cdiff[i] += 3 \u610f\u5473\u7740\u7ed9 nums[i..] \u6240\u6709\u7684\u5143\u7d20\u90fd\u52a0\u4e86 3\uff0c\u7136\u540e diff[j+1] -= 3 \u53c8\u610f\u5473\u7740\u5bf9\u4e8e nums[j+1..] \u6240\u6709\u5143\u7d20\u518d\u51cf 3\uff0c\u90a3\u7efc\u5408\u8d77\u6765\uff0c\u662f\u4e0d\u662f\u5c31\u662f\u5bf9 nums[i..j] \u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u52a0 3 \u4e86\uff1f</p> <p>\u53ea\u8981\u82b1\u8d39 O(1) \u7684\u65f6\u95f4\u4fee\u6539 diff \u6570\u7ec4\uff0c\u5c31\u76f8\u5f53\u4e8e\u7ed9 nums \u7684\u6574\u4e2a\u533a\u95f4\u505a\u4e86\u4fee\u6539\u3002\u591a\u6b21\u4fee\u6539 diff\uff0c\u7136\u540e\u901a\u8fc7 diff \u6570\u7ec4\u53cd\u63a8\uff0c\u5373\u53ef\u5f97\u5230 nums \u4fee\u6539\u540e\u7684\u7ed3\u679c\u3002</p>"},{"location":"algo/dp/%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/","title":"\u7f16\u8f91\u8ddd\u79bb\u95ee\u9898","text":"<p>\u8f93\u5165\u4e24\u5b57\u7b26\u4e32\uff0cs\u548ct\uff0c\u6c42s\u8f6c\u6362\u4e3at\u7684\u6700\u5c11\u7f16\u8f91\u6b65\u6570\u3002</p>"},{"location":"algo/dp/%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/#_2","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u6bcf\u4e00\u6b65\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8fdb\u884c\u4e09\u79cd\u64cd\u4f5c\uff1a - \u63d2\u5165\u4e00\u4e2a\u5b57\u7b26 - \u5220\u9664\u4e00\u4e2a\u5b57\u7b26 - \u5c06\u5b57\u7b26\u66ff\u6362\u4e3a\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26</p>"},{"location":"algo/dp/%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/#1","title":"\u793a\u4f8b 1","text":"<p>\u8f93\u5165\uff1aword1 = \"horse\", word2 = \"ros\"</p> <p>\u8f93\u51fa\uff1a3</p> <p>\u89e3\u91ca\uff1a</p> <p>horse -&gt; rorse (\u5c06 'h' \u66ff\u6362\u4e3a 'r')</p> <p>rorse -&gt; rose (\u5220\u9664 'r')</p> <p>rose -&gt; ros (\u5220\u9664 'e')</p>"},{"location":"algo/dp/%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/#2","title":"\u793a\u4f8b 2\uff1a","text":"<p>\u8f93\u5165\uff1aword1 = \"intention\", word2 = \"execution\"</p> <p>\u8f93\u51fa\uff1a5</p> <p>\u89e3\u91ca\uff1a</p> <p>intention -&gt; inention (\u5220\u9664 't')</p> <p>inention -&gt; enention (\u5c06 'i' \u66ff\u6362\u4e3a 'e')</p> <p>enention -&gt; exention (\u5c06 'n' \u66ff\u6362\u4e3a 'x')</p> <p>exention -&gt; exection (\u5c06 'n' \u66ff\u6362\u4e3a 'c')</p> <p>exection -&gt; execution (\u63d2\u5165 'u')</p>"},{"location":"algo/dp/%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/#_3","title":"\u601d\u8003\ud83e\udd14","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\uff0c\u80fd\u5f97\u5230\u7684\u65b0\u5b57\u7b26\u4e32\u6570\u91cf\uff0c\u597d\u50cf\u662f\u56fa\u5b9a\u7684\uff1f</p> <p>\u4f8b\u5982\uff0c\u5bf9\u4e8eabc\uff0c\u4e00\u6b21\u64cd\u4f5c\u53ef\u4ee5\uff1a \uff08\u5047\u8bbe\u8fd9\u91cc\u7684\u5b57\u7b26\u90fd\u662f\u5c0f\u5199\u5b57\u6bcda-z\uff09 - \u5220\u9664a\uff0c\u5220\u9664b\uff0c\u5220\u9664c - ab\u4e4b\u95f4\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\uff0cbc\u4e4b\u95f4\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\uff0ca\u5de6\u8fb9\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\uff0cc\u53f3\u8fb9\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26 - \u66ff\u6362a,b,c\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a</p> <p>\u5bf9\u4e8e\u65b0\u7684\u5b57\u7b26\uff0c\u53c8\u53ef\u4ee5\u8fdb\u884c\u4e00\u6b21\u66ff\u6362... \u6210\u4e3a\u4e00\u68f5\u51b3\u7b56\u6811\u3002 \u8fd9\u6837\u9012\u5f52\u56de\u6eaf\uff0c\u76f4\u5230\u67d0\u4e00\u6b21\u65b0\u7684\u5b57\u7b26\u4e32\u7b49\u4e8e\u76ee\u6807\u4e32\u3002</p> <p>\u4ece\u51b3\u7b56\u6811\u7684\u89d2\u5ea6\u770b\uff0c\u672c\u9898\u7684\u76ee\u6807\u662f\u6c42\u89e3\u8282\u70b9 s \u548c\u8282\u70b9 t \u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u3002</p>"},{"location":"algo/dp/%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/#dp","title":"dp\u89e3\u6cd5","text":"<p>\u5047\u8bbes\u548ct\u7684\u957f\u5ea6\u5206\u522b\u4e3am,n\u3002</p> <p>\u8003\u8651\u5b57\u7b26\u4e32\u5c3e\u90e8\u7684\u5b57\u7b26 s[m-1] \u548c t[n-1]\u3002 \u5982\u679c\u4e8c\u8005\u76f8\u540c\uff0c\u95ee\u9898\u5c31\u8f6c\u6362\u4e3a s[0:m-1] \u548c t[0:n-1] \u7684\u7f16\u8f91\u8ddd\u79bb\u95ee\u9898\u3002</p> <p>\u5982\u679c\u4e0d\u540c\uff0c\u5c31\u64cd\u4f5c\uff0c\u5728\u8003\u8651\u5de6\u4fa7\u7684\u3002</p> <p>\u5b9a\u4e49 f[i][j] \u662f\u5c06 s\u7684\u524di\u4e2a\u5b57\u7b26s[:i]\u53d8\u66f4\u4e3at\u7684\u524dj\u4e2a\u5b57\u7b26t[:j]\uff0c\u6240\u9700\u7684\u6700\u5c11\u6b65\u6570\u3002</p> <p>\u6700\u7ec8\u7684\u7b54\u6848\u662ff[m][n]\u3002</p> Go<pre><code>// lc 72 \u7f16\u8f91\u8ddd\u79bb\u95ee\u9898\n// https://www.hello-algo.com/chapter_dynamic_programming/edit_distance_problem/\npackage main\n\nfunc minDistance(s, t string) int {\n    m, n := len(s), len(t)\n    f := make([][]int, m+1) // f[i][j] \u8868\u793as[i]\u53d8\u6210t[j] \u7684\u6700\u5c11\u7f16\u8f91\u6b21\u6570\n    for i := range f {\n        f[i] = make([]int, n+1)\n    }\n    // \u521d\u59cb\u5316\u8fb9\u754c, \u5176\u4e2d\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e3a\u7a7a\u7684\u60c5\u51b5\n    for i := 1; i &lt;= m; i++ {\n        f[i][0] = i\n    }\n    for j := 1; j &lt;= n; j++ {\n        f[0][j] = j\n    }\n    for i := 1; i &lt;= m; i++ {\n        for j := 1; j &lt;= n; j++ {\n            if s[i] == t[j] {\n                f[i][j] = f[i-1][j-1]\n            } else { // s[i] != t[j]\n                append := f[i][j-1] + 1   // \u5728s[i-1]\u540e\u9762\u76f4\u63a5\u52a0\u4e0at[j-1]\n                change := f[i-1][j-1] + 1 // \u628as[i-1]\u66ff\u6362\u4e3at[j-1]\n                delete := f[i-1][j] + 1   // \u5220\u9664s[i-1]\n                f[i][j] = min(append, change, delete)\n            }\n        }\n    }\n    return f[m][n]\n}\n</code></pre>"},{"location":"algo/graph/%E8%81%94%E9%80%9A%E5%88%86%E9%87%8F%E6%95%B0/","title":"\u6c42\u65e0\u5411\u56fe\u7684\u8054\u901a\u5206\u91cf\u6570\u76ee","text":"<p>\u628a\u56fe\u60f3\u8c61\u6210\u4e00\u5806\u4e1c\u897f\uff0c\u4e00\u80a1\u8111\u5f80\u5929\u4e0a\u629b\uff0c\u843d\u5730\u4e0a\u4e4b\u540e\uff0c\u6709\u51e0\u4e2a\u5206\u5f00\u7684\u90e8\u5206\uff0c\u5c31\u6709\u51e0\u4e2a\u8054\u901a\u5206\u91cf\u3002</p>"},{"location":"algo/graph/%E8%81%94%E9%80%9A%E5%88%86%E9%87%8F%E6%95%B0/#dfs","title":"dfs\u65b9\u6cd5","text":"<p>\u904d\u5386\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u8bbf\u95ee\u8fc7\uff0c\u5c31\u8df3\u8fc7\u3002\u6ca1\u8bbf\u95ee\u8fc7\uff0c\u5c31dfs\u6216\u8005bfs\u6765\u8bbf\u95ee\u5b83\u6240\u5728\u7684\u5206\u91cf\uff0c\u7136\u540e\u5206\u91cf\u6570+1\uff0c\u76f4\u5230\u8bbf\u95ee\u5b8c\u3002</p> <p>\u6709\u70b9\u50cf\u5c9b\u5c7f\u6570\u91cf\u3002</p>"},{"location":"algo/graph/%E8%81%94%E9%80%9A%E5%88%86%E9%87%8F%E6%95%B0/#_2","title":"\u6784\u5efa\u56fe","text":"<p>\u4ece\u90bb\u63a5\u77e9\u9635\u6784\u5efa\u90bb\u63a5\u8868\u7684\u56fe\uff0c\u65b9\u4fbf\u8fdb\u884cdfs\u6216\u8005bfs\u3002</p> <p>\u6784\u5efa\u7684\u65f6\u5019\uff0c\u9700\u8981\u904d\u5386\u5168\u90e8\u7684\u8fb9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 O(E),\u56e0\u4e3a\u8981\u904d\u5386\u6240\u6709\u7684\u8fb9\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6 O(2E) \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fb9\uff0c\u90fd\u6709\u4e24\u4e2a\u8282\u70b9\u8981\u5b58\u5230\u5bf9\u65b9\u7684\u90bb\u63a5\u8868\u4e2d\u3002</p>"},{"location":"algo/graph/%E8%81%94%E9%80%9A%E5%88%86%E9%87%8F%E6%95%B0/#_3","title":"\u6c42\u5206\u91cf","text":"<p>\u904d\u5386\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u8bbf\u95ee\u8fc7\uff0c\u5c31\u8df3\u8fc7\u3002\u6ca1\u8bbf\u95ee\u8fc7\uff0c\u5c31dfs\u6216\u8005bfs\u6765\u8bbf\u95ee\u5b83\u6240\u5728\u7684\u5206\u91cf\uff0c\u7136\u540e\u5206\u91cf\u6570+1\uff0c\u76f4\u5230\u8bbf\u95ee\u5b8c\u3002</p> <p>\u9700\u8981\u4e00\u4e2a\u8bbf\u95ee\u6570\u7ec4 visited \u7a7a\u95f4 O(V)\uff0c\u9012\u5f52\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u6700\u5927 O(V)\u3002\u65f6\u95f4\u590d\u6742\u5ea6 O(V+E)\u3002</p>"},{"location":"algo/greedy/%E4%BC%9A%E8%AE%AE%E5%AE%A42/","title":"\u4f1a\u8bae\u5ba42","text":"Go<pre><code>// lc253 \u4f1a\u8bae\u5ba42\uff0c\u6c42\u4f1a\u8bae\u5ba4\u7684\u6700\u5c0f\u6570\u91cf\npackage main\n\nimport (\n    \"container/heap\"\n    \"fmt\"\n    \"sort\"\n)\n\nfunc minMeetingRooms(intervals [][]int) int {\n    allocator := &amp;minHeap{}\n    heap.Init(allocator)\n\n    // \u6839\u636e\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\u4f1a\u8bae\n    sort.Slice(intervals, func(i, j int) bool { return intervals[i][0] &lt; intervals[j][0] })\n    heap.Push(allocator, intervals[0][1])\n\n    // \u904d\u5386\u5269\u4f59\u4f1a\u8bae\n    for i := 1; i &lt; len(intervals); i++ {\n        // \u5982\u679c\u6700\u65e9\u5e94\u8be5\u817e\u51fa\u7684\u623f\u95f4\u662f\u7a7a\u95f2\u7684\uff0c\u5219\u5c06\u8be5\u623f\u95f4\u5206\u914d\u7ed9\u672c\u6b21\u4f1a\u8bae\u3002\n        if intervals[i][0] &gt;= (*allocator)[0] {\n            heap.Pop(allocator)\n        }\n        // \u5982\u679c\u8981\u5206\u914d\u4e00\u4e2a\u65b0\u623f\u95f4\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u8981\u6dfb\u52a0\u5230\u5806\u4e2d\uff0c\n        // \u5982\u679c\u5206\u914d\u4e86\u4e00\u4e2a\u65e7\u623f\u95f4\uff0c\u90a3\u4e48\u6211\u4eec\u8fd8\u5fc5\u987b\u6dfb\u52a0\u5230\u5177\u6709\u66f4\u65b0\u7684\u7ed3\u675f\u65f6\u95f4\u7684\u5806\u4e2d\u3002\n        heap.Push(allocator, intervals[i][1])\n    }\n\n    // \u5806\u7684\u5927\u5c0f\u544a\u8bc9\u6211\u4eec\u6240\u6709\u4f1a\u8bae\u6240\n    return len(*allocator)\n}\n\n// \u5c0f\u6839\u5806\ntype minHeap []int\n\nfunc (h minHeap) Len() int            { return len(h) }\nfunc (h minHeap) Less(i, j int) bool  { return h[i] &lt; h[j] }\nfunc (h minHeap) Swap(i, j int)       { h[i], h[j] = h[j], h[i] }\nfunc (h *minHeap) Push(x interface{}) { *h = append(*h, x.(int)) }\nfunc (h *minHeap) Pop() interface{} {\n    v := (*h)[len(*h)-1]\n    *h = (*h)[:len(*h)-1]\n    return v\n}\n\ntype Point struct {\n    t          int\n    point_type bool // 0 start, 1 end\n}\n\n// \u626b\u63cf\u7ebf\u601d\u60f3\uff0c\u6c42\u540c\u65f6\u5728\u8fdb\u884c\u4e2d\u7684\u4f1a\u8bae\u7684\u6700\u5927\u6570\u91cf\uff08\u6700\u5927\u5e76\u53d1\u91cf\uff09\nfunc minMeetingRooms2(intervals [][]int) int {\n    n := len(intervals)\n    times := make([]Point, 0, 2*n) // make(type, len, cap)\n    for _, interval := range intervals {\n        times = append(times, Point{interval[0], false})\n        times = append(times, Point{interval[1], true})\n    }\n    sort.Slice(times, func(i, j int) bool {\n        if times[i].t &lt; times[j].t {\n            return true\n        } else if times[i].t == times[j].t {\n            return times[i].point_type // true\u7684\u5f80\u524d\u653e\u7f6e\n        }\n        return false // \u4e3a\u4e86\u5904\u7406 [[13,15],[1,13]] \u8fd9\u6837\u7684\u60c5\u51b5\n    })\n    // fmt.Printf(\"times: %v\\n\", times)\n    numOfOngingMetting := 0\n    ans := numOfOngingMetting\n    for i := 0; i &lt; 2*n; i++ {\n        if times[i].point_type {\n            numOfOngingMetting--\n        } else {\n            numOfOngingMetting++\n        }\n        // fmt.Printf(\"numOfOngingMetting: %v\\n\", numOfOngingMetting)\n        ans = max(ans, numOfOngingMetting)\n    }\n    return ans\n}\n\nfunc main() {\n    intervals := [][]int{{1, 23}, {12, 28}, {25, 35}, {27, 80}, {36, 50}}\n    ans := minMeetingRooms(intervals)\n    fmt.Printf(\"ans: %v\\n\", ans) // 3\n\n    intervals = [][]int{{1, 23}, {12, 28}, {25, 35}, {27, 80}, {36, 50}}\n    ans = minMeetingRooms2(intervals)\n    fmt.Printf(\"ans: %v\\n\", ans)\n\n    intervals = [][]int{{13, 15}, {1, 13}}\n    ans = minMeetingRooms2(intervals)\n    fmt.Printf(\"ans: %v\\n\", ans)\n}\n</code></pre>"},{"location":"golang/embed/embed/","title":"embed","text":""},{"location":"golang/embed/embed/#_1","title":"\u5f15\u5165","text":"<p>\u6709\u4e00\u6b21\u5728\u9879\u76ee\u4e2d\u770b\u5230\u4e86\u8fd9\u6837\u7684\u5185\u5bb9</p> <p>Go<pre><code>//go:embed jules_verne.txt\n//go:embed vocab\n</code></pre> \u770b\u8d77\u6765\u50cf\u662f\u6ce8\u91ca\uff0c\u4f46\u662f\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u8bed\u8a00\u7279\u6027\u3002</p>"},{"location":"golang/embed/embed/#_2","title":"\u4f5c\u7528","text":"<p>embed \u7684\u4e3b\u8981\u7528\u9014\u662f\u5c06\u5916\u90e8\u6587\u4ef6\u7684\u5185\u5bb9\u5d4c\u5165\u5230 Go \u7a0b\u5e8f\u4e2d\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e9b\u6587\u4ef6\u5185\u5bb9\uff0c\u800c\u65e0\u9700\u5728\u8fd0\u884c\u65f6\u52a0\u8f7d\u5916\u90e8\u6587\u4ef6\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a</p>"},{"location":"golang/embed/embed/#_3","title":"\u793a\u4f8b","text":"<p>\u793a\u4f8b\uff1a\u5d4c\u5165 HTML \u6587\u4ef6 \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a HTML \u6587\u4ef6 index.html\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a</p> HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Embedded Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Hello, Go Embed!&lt;/h1&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 embed \u5c06\u8fd9\u4e2a\u6587\u4ef6\u5d4c\u5165\u5230 Go \u7a0b\u5e8f\u4e2d\uff1a Go<pre><code>package main\n\nimport (\n    _ \"embed\"\n    \"fmt\"\n)\n\n//go:embed index.html\nvar htmlContent string\n\nfunc main() {\n    // \u8f93\u51fa\u5d4c\u5165\u7684 HTML \u5185\u5bb9\n    fmt.Println(\"Embedded HTML Content:\")\n    fmt.Println(htmlContent)\n}\n</code></pre></p>"},{"location":"golang/embed/embed/#_4","title":"\u603b\u7ed3","text":"<p>\u5199\u5728\u8c01\u7684\u5934\u4e0a\uff0c\u90a3\u4e2a\u53d8\u91cf\u5c31\u53d8\u6210\u4e86\u8fd9\u4e2a\u5d4c\u5165\u6587\u4ef6\u7684\u5185\u5bb9</p> <p>\u7528\u9014 \u5d4c\u5165\u9759\u6001\u8d44\u6e90:</p> <p>\u5d4c\u5165 HTML\u3001CSS\u3001JavaScript \u6587\u4ef6\uff0c\u7528\u4e8e\u6784\u5efa Web \u5e94\u7528\u3002 \u5d4c\u5165\u914d\u7f6e\u6587\u4ef6\uff08\u5982 JSON\u3001YAML\uff09\u3002 \u5d4c\u5165\u6587\u672c\u6570\u636e:</p> <p>\u5d4c\u5165\u8bcd\u6c47\u8868\u3001\u6587\u6863\u6216\u5176\u4ed6\u6587\u672c\u6570\u636e\uff08\u5982\u4f60\u7684 jules_verne.txt \u548c vocab \u6587\u4ef6\uff09\u3002 \u7b80\u5316\u90e8\u7f72:</p> <p>\u5c06\u6240\u6709\u8d44\u6e90\u6253\u5305\u5230\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\uff0c\u907f\u514d\u8fd0\u884c\u65f6\u4f9d\u8d56\u5916\u90e8\u6587\u4ef6\u3002</p> <p>\u6ce8\u610f\u4e8b\u9879 \u5d4c\u5165\u7684\u6587\u4ef6\u8def\u5f84\u5fc5\u987b\u662f\u76f8\u5bf9\u8def\u5f84\u3002 \u5d4c\u5165\u7684\u6587\u4ef6\u5185\u5bb9\u4f1a\u589e\u52a0\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u5927\u5c0f\uff0c\u9002\u5408\u5c0f\u578b\u6587\u4ef6\u3002 embed \u4ec5\u652f\u6301 Go 1.16 \u53ca\u4ee5\u4e0a\u7248\u672c\u3002 \u901a\u8fc7 embed\uff0c\u4f60\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u5916\u90e8\u8d44\u6e90\u6574\u5408\u5230 Go \u7a0b\u5e8f\u4e2d\uff0c\u7b80\u5316\u5f00\u53d1\u548c\u90e8\u7f72\u6d41\u7a0b\u3002</p>"},{"location":"golang/func/innerfunc/","title":"\u5728\u51fd\u6570\u5185\u5b9a\u4e49\u51fd\u6570","text":"<p>\u5728golang\u51fd\u6570\u7684\u5185\u90e8\uff0c\u53ef\u4ee5\u5b9a\u4e49\u53e6\u5916\u7684\u51fd\u6570</p> Go<pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Outer function\")\n    var innerFunction = func() {\n        fmt.Println(\"Inner function\")\n    }\n    innerFunction() // \u6ca1\u6709\u8fd9\u4e00\u53e5\u4f1a\u51fa\u9519\uff0c\u56e0\u4e3ainnerFunction\u5b9a\u4e49\u800c\u4e0d\u4f7f\u7528\n}\n</code></pre> Go<pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Outer function\")\n    innerFunction := func() { // \u4f7f\u7528 := \u4e5f\u53ef\u4ee5\n        fmt.Println(\"Inner function\")\n    }\n    innerFunction()\n}\n</code></pre>"},{"location":"golang/ioreader/bufio/","title":"bufio \u5e26\u7f13\u51b2\u7684 IO \u64cd\u4f5c\u5e93","text":"<p>bufio\u662f\u6807\u51c6\u5e93\u7684\u4e00\u4e2a\u5305\uff0c\u5168\u79f0\u4e3a buffered I/O\uff0c\u4e3b\u8981\u7528\u4e8e\u63d0\u4f9b\u5e26\u7f13\u51b2\u7684 I/O \u64cd\u4f5c\uff0c\u80fd\u591f\u63d0\u9ad8 I/O \u64cd\u4f5c\u7684\u6548\u7387\uff0c\u51cf\u5c11\u7cfb\u7edf\u8c03\u7528\u7684\u6b21\u6570\u3002</p>"},{"location":"golang/ioreader/bufio/#_1","title":"\u5e26\u7f13\u51b2\u533a","text":"<p>bufio.NewReader\u51fd\u6570\u53ef\u4ee5\u5c06\u4e00\u4e2a io.Reader \u5305\u88c5\u6210\u4e00\u4e2a bufio.Reader\u3002\u5b83\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u5185\u90e8\u7684\u7f13\u51b2\u533a\uff0c\u5f53\u4ece bufio.Reader \u4e2d\u8bfb\u53d6\u6570\u636e\u65f6\uff0c\u5b83\u4f1a\u5148\u4ece\u7f13\u51b2\u533a\u4e2d\u8bfb\u53d6\uff0c\u5982\u679c\u7f13\u51b2\u533a\u4e2d\u7684\u6570\u636e\u4e0d\u8db3\uff0c\u624d\u4f1a\u4ece\u5e95\u5c42\u7684 io.Reader \u4e2d\u8bfb\u53d6\u66f4\u591a\u6570\u636e\u586b\u5145\u7f13\u51b2\u533a\u3002</p> <p>bufio.NewWriter\u51fd\u6570\u53ef\u4ee5\u5c06\u4e00\u4e2a io.Writer \u5305\u88c5\u6210\u4e00\u4e2a bufio.Writer\u3002\u5b83\u540c\u6837\u7ef4\u62a4\u4e00\u4e2a\u5185\u90e8\u7684\u7f13\u51b2\u533a\uff0c\u5f53\u5411 bufio.Writer \u5199\u5165\u6570\u636e\u65f6\uff0c\u6570\u636e\u4f1a\u5148\u5199\u5165\u7f13\u51b2\u533a\uff0c\u5f53\u7f13\u51b2\u533a\u6ee1\u4e86\u6216\u8005\u8c03\u7528\u4e86 Flush \u65b9\u6cd5\u65f6\uff0c\u624d\u4f1a\u5c06\u7f13\u51b2\u533a\u4e2d\u7684\u6570\u636e\u5199\u5165\u5230\u5e95\u5c42\u7684 io.Writer \u4e2d</p> <p>\u8fd9\u4e2a\u7f13\u51b2\u533a\u57df\u662f\u7ef4\u62a4\u5728\u5185\u5b58\u4e2d\uff0c\u6240\u4ee5\u76f8\u8f83\u4e8e\u591a\u6b21\u7684\u76f4\u63a5\u7cfb\u7edf\u8c03\u7528\u548c\u78c1\u76d8\u3001\u7f51\u7edc\u6253\u4ea4\u9053\uff0c\u8981\u76f8\u5bf9\u5feb\u4e00\u4e9b\u3002</p>"},{"location":"golang/ioreader/bufio/#_2","title":"\u5199\u7f13\u51b2\u533a\u7684\u5b58\u5728","text":"<p>\u4f7f\u7528 bufio.NewWriter \u8bc1\u660e\uff1a\u662f\u5148\u5411\u7f13\u51b2\u533a\u5199\uff0cFlush\u4e4b\u540e\uff0c\u624d\u5411Stdout\u5199 Go<pre><code>package main\n\nimport (\n    \"bufio\"\n    \"fmt\"\n    \"os\"\n)\n\nfunc main() {\n    w := bufio.NewWriter(os.Stdout) // \u80fd\u5411\u6807\u51c6\u8f93\u51fa\u5199\n    w.WriteString(\"this is a string.\")\n    w.WriteByte(97)\n    smile := '\ud83d\ude00'\n\n    fmt.Printf(\"unicode: %U\\n\", smile)\n\n    w.WriteRune(smile) // \u8fd9\u4e2a\u662f\u4e00\u4e2a unicode \u7801\u70b9\n\n    fmt.Println(\"** up to now, writer content hasn't been printed to stdout **\")\n\n    w.Flush()\n}\n</code></pre> Flush \u65b9\u6cd5\u7528\u4e8e\u5c06\u7f13\u51b2\u533a\u4e2d\u7684\u6570\u636e\u5168\u90e8\u5199\u5165\u5230\u5e95\u5c42\u7684 io.Writer\u3002 \u5f53\u4f7f\u7528 bufio.NewWriter(stdout) \u7684\u65f6\u5019\uff0c\u4f1a\u9ed8\u8ba4\u521b\u5efa\u4e00\u4e2a4096\u5927\u5c0f\u7684\u7f13\u51b2\u533a\u3002 \u5e76\u4e14\u4ed6\u7684\u53c2\u6570os.Stdout \u672c\u8eab\u662f\u4e00\u4e2aio.Writer(\u5177\u4f53\u7c7b\u578b\u662fos.File)\u3002</p>"},{"location":"golang/ioreader/bufio/#_3","title":"\u8bfb\u7f13\u51b2\u533a","text":"<p>bufio.Reader \u4e5f\u662f\u7ef4\u62a4\u4e86\u4e00\u4e2a\u8bfb\u7f13\u51b2\u533a\uff0c\u5148\u5c3d\u91cf\u4ece\u8bfb\u7f13\u51b2\u533a\u8bfb\u3002</p> Go<pre><code>package main\n\nimport (\n    \"bufio\"\n    \"fmt\"\n    \"os\"\n)\n\nfunc main() {\n    r, _ := os.Open(\"bufio_test.txt\") // reader\n    br := bufio.NewReader(r)          // bufio \u5305\u88c5 io.reader\n\n    shortStr, _ := br.ReadString('G')\n    fmt.Printf(\"shortStr: %v\\n\", shortStr)\n\n    str, _, _ := br.ReadLine()\n    fmt.Printf(\"str: %v\\n\", str)\n\n    // Buffered, \u8fd4\u56de\u5df2\u7ecf\u9884\u8bfb\u7f13\u5b58\u7684\u5b57\u8282\u6570\n    // Buffered returns the number of bytes that can be read from the current buffer\n    fmt.Printf(\"br.Buffered(): %v\\n\", br.Buffered()) // 2804\n}\n</code></pre>"},{"location":"golang/ioreader/bufio/#bufioscanner","title":"bufio.Scanner","text":"<p>bufio.Scanner \u662f\u4e00\u4e2a\u65b9\u4fbf\u7684\u5de5\u5177\uff0c\u7528\u4e8e\u9010\u884c\u8bfb\u53d6\u6587\u672c\u3002\u5b83\u4e5f\u53ef\u4ee5\u5c06\u4e00\u4e2a io.Reader \u5305\u88c5\u8d77\u6765\uff0c\u901a\u8fc7\u8bbe\u7f6e\u4e0d\u540c\u7684\u5206\u9694\u7b26\uff08\u9ed8\u8ba4\u662f\u6362\u884c\u7b26\uff09\u6765\u8bfb\u53d6\u6570\u636e\u3002</p> <p>Go<pre><code>scanner := bufio.NewScanner(os.Stdin)\nfor scanner.Scan() {\n    fmt.Println(\"Scanned line:\", scanner.Text())\n}\nif err := scanner.Err(); err != nil {\n    log.Fatal(err)\n}\n</code></pre> \u8fd9\u91cc\u901a\u8fc7 bufio.NewScanner \u5305\u88c5\u4e86\u6807\u51c6\u8f93\u5165\u6d41 os.Stdin\uff0c\u7136\u540e\u901a\u8fc7\u5faa\u73af\u8c03\u7528 Scan \u65b9\u6cd5\u9010\u884c\u8bfb\u53d6\u7528\u6237\u8f93\u5165\uff0c\u5e76\u901a\u8fc7 Text \u65b9\u6cd5\u83b7\u53d6\u6bcf\u884c\u7684\u5185\u5bb9\u3002</p>"},{"location":"golang/ioreader/bufio/#_4","title":"\u603b\u7ed3","text":"<p>bufio\u662fGo\u7684\u6807\u51c6\u7684\u5305\uff0c\u7ef4\u62a4\u7f13\u51b2\u533a\uff0c\u7528\u6765\u907f\u514d\u989d\u5916\u7684IO\u64cd\u4f5c\u3002 - \u63d0\u9ad8\u6548\u7387\uff1a\u901a\u8fc7\u7f13\u51b2\u673a\u5236\u51cf\u5c11\u4e86\u5bf9\u5e95\u5c42 I/O \u7cfb\u7edf\u8c03\u7528\u7684\u6b21\u6570\uff0c\u63d0\u9ad8\u4e86 I/O \u64cd\u4f5c\u7684\u6548\u7387\u3002 - \u65b9\u4fbf\u4f7f\u7528\uff1a\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u63a5\u53e3\u548c\u65b9\u6cd5\uff0c\u65b9\u4fbf\u5f00\u53d1\u8005\u8fdb\u884c\u5404\u79cd I/O \u64cd\u4f5c\uff0c\u6bd4\u5982\u9010\u884c\u8bfb\u53d6\u3001\u6309\u5206\u9694\u7b26\u8bfb\u53d6\u7b49, \u6bd4bare\u7684io.Reader \u4f8b\u5982 strings.Reader \u8981\u65b9\u4fbf\u4e00\u70b9\u3002</p> <p>bufio \u5305\u5728\u5904\u7406\u6587\u4ef6 I/O\u3001\u7f51\u7edc I/O \u7b49\u573a\u666f\u4e2d\u975e\u5e38\u6709\u7528\uff0c\u80fd\u591f\u5e2e\u52a9\u5f00\u53d1\u8005\u66f4\u9ad8\u6548\u5730\u8fdb\u884c\u6570\u636e\u8bfb\u53d6\u548c\u5199\u5165\u64cd\u4f5c\u3002</p>"},{"location":"golang/ioreader/bufio/#_5","title":"\u7591\u95ee\uff1a","text":"<p>\u5bf9\u4e8e\u672c\u8eab\u5c31\u5728\u5185\u5b58\u7684\u6570\u636e\uff0c\u4f8b\u5982string, \u4f55\u5fc5\u8fd8\u8981\"\u51cf\u5c11\u5e95\u5c42\u7684strings.NewReader \u7684\u8c03\u7528\u6b21\u6570\"\uff1f</p> <ul> <li> <p>\u5bf9\u4e8e\u5185\u5b58\u4e2d\u7684\u6570\u636e\uff08\u5982 string\uff09\uff0cbufio.Reader \u7684\u7f13\u51b2\u673a\u5236\u5e76\u4e0d\u4f1a\u5e26\u6765\u663e\u8457\u7684\u6027\u80fd\u63d0\u5347\uff0c\u56e0\u4e3a\u5185\u5b58\u8bfb\u53d6\u672c\u8eab\u5df2\u7ecf\u975e\u5e38\u5feb\u3002</p> </li> <li> <p>\u5982\u679c\u4f60\u9700\u8981\u9010\u884c\u8bfb\u53d6\u6216\u5b9e\u73b0\u590d\u6742\u7684\u8bfb\u53d6\u903b\u8f91\uff0cbufio.Reader \u6216 bufio.Scanner \u4ecd\u7136\u662f\u975e\u5e38\u6709\u7528\u7684\u5de5\u5177\uff0c\u56e0\u4e3a\u5b83\u4eec\u63d0\u4f9b\u4e86\u66f4\u65b9\u4fbf\u7684\u65b9\u6cd5\u548c\u7075\u6d3b\u6027\u3002</p> </li> </ul>"},{"location":"golang/ioreader/ioreader/","title":"io.Reader","text":"<p>\u5199go\u7684\u65f6\u5019\u7ecf\u5e38\u89c1\u5230 io.Reader \u8fd9\u4e2a\u4e1c\u897f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u662f\u4ec0\u4e48\u5462\uff1f</p>"},{"location":"golang/ioreader/ioreader/#_1","title":"\u662f\u4e00\u4e2a\u63a5\u53e3","text":"<p>io.Reader \u662f\u4e00\u4e2a\u63a5\u53e3 interface \u5728 go \u7684 io \u5305\u91cc\u9762\u5b9a\u4e49\u7684\u3002</p> Go<pre><code>// Reader is the interface that wraps the basic Read method.\n//\n// Read reads up to len(p) bytes into p. It returns the number of bytes\n// read (0 &lt;= n &lt;= len(p)) and any error encountered. Even if Read\n// returns n &lt; len(p), it may use all of p as scratch space during the call.\n// If some data is available but not len(p) bytes, Read conventionally\n// returns what is available instead of waiting for more.\n//\n// When Read encounters an error or end-of-file condition after\n// successfully reading n &gt; 0 bytes, it returns the number of\n// bytes read. It may return the (non-nil) error from the same call\n// or return the error (and n == 0) from a subsequent call.\n// An instance of this general case is that a Reader returning\n// a non-zero number of bytes at the end of the input stream may\n// return either err == EOF or err == nil. The next Read should\n// return 0, EOF.\n//\n// Callers should always process the n &gt; 0 bytes returned before\n// considering the error err. Doing so correctly handles I/O errors\n// that happen after reading some bytes and also both of the\n// allowed EOF behaviors.\n//\n// If len(p) == 0, Read should always return n == 0. It may return a\n// non-nil error if some error condition is known, such as EOF.\n//\n// Implementations of Read are discouraged from returning a\n// zero byte count with a nil error, except when len(p) == 0.\n// Callers should treat a return of 0 and nil as indicating that\n// nothing happened; in particular it does not indicate EOF.\n//\n// Implementations must not retain p.\ntype Reader interface {\n    Read(p []byte) (n int, err error)\n}\n</code></pre>"},{"location":"golang/ioreader/ioreader/#read","title":"\u63a5\u53e3\u53ea\u5b9a\u4e49\u4e86\u4e00\u4e2aRead","text":"<p>\u53ea\u9700\u8981\u5b9e\u73b0\u4e86 Read \u65b9\u6cd5\u7684\u5c31\u662f Reader\u3002</p>"},{"location":"golang/ioreader/ioreader/#_2","title":"\u8c01\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3","text":"<p>\u6709\u5f88\u591a\u5e38\u7528\u7684\u5de5\u5177\uff0c\u90fd\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u501f\u53e3\u3002</p>"},{"location":"golang/ioreader/ioreader/#stringsnewreader","title":"strings.NewReader","text":"<p>strings.NewReader \u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u5c31\u662f\u5b9e\u73b0\u4e86Reader\u63a5\u53e3\u7684\u3002 Go<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"io\"\n    \"strings\"\n)\n\nfunc main() {\n    // io.Reader interface\n    r := strings.NewReader(\"hello world!\")\n\n    buf := make([]byte, 5) // \u7f13\u51b2\u533a\n    for {\n        n, err := r.Read(buf)\n        if n &gt; 0 {\n            fmt.Printf(\"read %v byte into buf, read content:%v\\n\", n, string(buf[:n]))\n        }\n        if err == io.EOF {\n            fmt.Println(\"reached end of file.\")\n            break\n        }\n        if err != nil {\n            fmt.Println(\"error encounter: %v\", err.Error())\n            break\n        }\n    }\n}\n/*\nread 5 byte into buf, read content:hello\nread 5 byte into buf, read content: worl\nread 2 byte into buf, read content:d!\nreached end of file.\n*/\n</code></pre></p>"},{"location":"golang/ioreader/ioreader/#osfile","title":"os.File","text":"<p>os.File \u5b9e\u73b0\u4e86 io.Reader \u63a5\u53e3 Go<pre><code>// file \u5b9e\u73b0\u4e86 io.Reader \u63a5\u53e3\npackage main\n\nimport (\n    \"fmt\"\n    \"io\"\n    \"os\"\n)\n\nfunc main() {\n    file, _ := os.Open(\"test.txt\")\n    defer file.Close()\n\n    buf := make([]byte, 128)\n    for {\n        n, err := file.Read(buf)\n        if n &gt; 0 {\n            fmt.Printf(\"read %v bytes: %v\\n\", n, string(buf[:n]))\n        }\n        if err == io.EOF {\n            fmt.Println(\"reached end of file\")\n            break\n        }\n        if err != nil {\n            fmt.Printf(\"error reading file: %v\\n\", err)\n            break\n        }\n    }\n}\n</code></pre></p>"},{"location":"golang/ioreader/ioreader/#netconn-ioreader","title":"net.Conn \u5b9e\u73b0\u4e86 io.Reader","text":"<p>\u53ef\u4ee5\u4ece\u7f51\u7edc\u8fde\u63a5\u4e2d\u8bfb\u53d6\u5b57\u8282\u6d41\u3002 Go<pre><code>// net.Conn \u5b9e\u73b0\u4e86 io.Reader \u63a5\u53e3\n\npackage main\n\nimport (\n    \"fmt\"\n    \"io\"\n    \"net\"\n)\n\n\nfunc main() {\n    listener, _ := net.Listen(\"tcp\", \":8080\")\n    defer listener.Close()\n\n    fmt.Println(\"server is listening on port 8080...\")\n    conn, _ := listener.Accept()\n\n    defer conn.Close()\n\n    buf := make([]byte, 128)\n\n    for {\n        n, err := conn.Read(buf)\n        if n &gt; 0 {\n            fmt.Printf(\"read %v bytes: %s\\n\", n, string(buf[:n]))\n        }\n        if err == io.EOF {\n            fmt.Println(\"client closed the connection\")\n        }\n        if err != nil {\n            fmt.Printf(\"error reading from connection %v\\n\", err.Error())\n        }\n    }\n}\n</code></pre></p>"},{"location":"golang/ioreader/ioreader/#ioreader_1","title":"\u603b\u7ed3 io.Reader","text":"<p>io.Reader \u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u53ea\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a Read \u65b9\u6cd5\uff0c\u5c31\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3\u3002 \u5f88\u591a\u5e93\u90fd\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3\uff0c\u4f8b\u5982 - strings.Reader \u7528\u6765\u8bfb string - net.Conn \u7528\u6765\u8bfb\u7f51\u7edc\u8fde\u63a5 - os.File \u7528\u6765\u8bfb\u6587\u4ef6</p> <p>\u4e0d\u540c\u7684\u5b9e\u9645\u7c7b\u578b\uff0c\u53ef\u4ee5\u5404\u81ea\u5b9e\u73b0Read\uff0c\u53ea\u662f\u5b9e\u73b0\u65b9\u5f0f\u4e0d\u4e00\u6837\u3002</p>"},{"location":"mysql/data/","title":"MYSQL \u5982\u4f55\u4fdd\u5b58\u4e00\u884c\u6570\u636e","text":"<p>\u53c2\u8003\u5c0f\u6797\u7684\u516b\u80a1</p>"},{"location":"mysql/data/#mysql_1","title":"MySQL \u7684\u6570\u636e\u4fdd\u5b58\u5728\u54ea\u91cc\uff1f","text":"<p>\u4ece\u5b58\u50a8\u4ecb\u8d28\u7684\u89d2\u5ea6\uff0c\u6570\u636e\u4fdd\u5b58\u5728\u786c\u76d8\u4e0a\u2014\u2014\u2014\u2014\u662f\u6301\u4e45\u5316\u5b58\u50a8\u3002 \u4ece\u6587\u4ef6\u7cfb\u7edf\u7684\u89d2\u5ea6\uff0cMySQL\u7684\u5b58\u50a8\u6570\u636e\u4fdd\u5b58\u5728\u54ea\u4e00\u4e2a\u76ee\u5f55\u4e0b\uff1f innodb\u5b58\u50a8\u5f15\u64ce\u4e0b\uff0c\u9ed8\u8ba4\u662f\u4fdd\u5b58\u5728 <code>/var/lib/mysql</code> \u4e0b\u7684\u3002</p> <p>\u53ef\u4ee5\u901a\u8fc7mysql\u547d\u4ee4\u884c\u5ba2\u6237\u7aef\uff0c\u8f93\u5165\u547d\u4ee4\u67e5\u770b\u6570\u636e\u4fdd\u5b58\u7684\u76ee\u5f55\u3002</p> <p>SQL<pre><code>mysql&gt; show variables like 'datadir';\n+---------------+-----------------+\n| Variable_name | Value           |\n+---------------+-----------------+\n| datadir       | /var/lib/mysql/ |\n+---------------+-----------------+\n1 row in set (0.00 sec)\n</code></pre> \u6bcf\u5f53\u6211\u4eec\u521b\u5efa\u4e00\u4e2adatabase\u3001\u5c31\u4f1a\u5728 <code>/var/lib/mysql</code>\u4e0b\u9762\u521b\u5efa\u4e00\u4e2a\u76ee\u5f55\u3002 \u4f8b\u5982\u73b0\u5728\u521b\u5efa\u4e00\u4e2a\u5e93database\u3002 SQL<pre><code>CREATE DATABASE testdb CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n</code></pre> \u518d\u53bb\u6587\u4ef6\u7cfb\u7edf\u4e0b\u9762\u5c31\u53ef\u4ee5\u770b\u5230\u8fd9\u540c\u540d\u76ee\u5f55\u3002 \u7b2c\u4e8c\u884c\u6700\u540e\u4e00\u4e2a\u5c31\u662f\u521a\u624d\u521b\u5efa\u7684\u6570\u636e\u5e93\u7684\u76ee\u5f55\u3002 Bash<pre><code>bash-5.1# ls /var/lib/mysql\n'#ib_16384_0.dblwr'   auto.cnf        ca-key.pem        ib_buffer_pool   mysql.ibd               private_key.pem   sys\n'#ib_16384_1.dblwr'   binlog.000001   ca.pem            ibdata1          mysql.sock              public_key.pem    testdb\n'#innodb_redo'        binlog.000002   client-cert.pem   ibtmp1           mysql_upgrade_history   server-cert.pem   undo_001\n'#innodb_temp'        binlog.index    client-key.pem    mysql            performance_schema      server-key.pem    undo_002\n</code></pre> \u518d\u6765\u7ed9\u8fd9\u4e2a\u5e93\u91cc\u9762\u5efa\u4e00\u4e2a\u8868\u3002 SQL<pre><code>-- \u521b\u5efa user \u8868\nCREATE TABLE user (\n    id INT AUTO_INCREMENT PRIMARY KEY COMMENT '\u7528\u6237\u552f\u4e00\u6807\u8bc6',\n    username VARCHAR(50) NOT NULL UNIQUE COMMENT '\u7528\u6237\u540d\uff0c\u552f\u4e00',\n    password VARCHAR(100) NOT NULL COMMENT '\u7528\u6237\u5bc6\u7801'\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='\u7528\u6237\u8868';\n\nQuery OK, 0 rows affected (0.14 sec)\n\nmysql&gt; show tables;\n+------------------+\n| Tables_in_testdb |\n+------------------+\n| user             |\n+------------------+\n1 row in set (0.01 sec)\n</code></pre> \u518d\u53bb\u67e5\u770b/var/lib/mysql/testdb \u5c31\u80fd\u770b\u5230 user.idb\u6587\u4ef6\u3002</p>"},{"location":"mysql/data/#idb","title":".idb\u7b80\u8981\u4e86\u89e3","text":"<p>\u8fd9\u4e2a\u5c31\u662f\u7528\u6765\u5b58\u50a8user\u8868\u7684\u6570\u636e\u7684\u3002MySQL \u4e2d\u6bcf\u4e00\u5f20\u8868\u7684\u6570\u636e\u90fd\u5b58\u653e\u5728\u4e00\u4e2a\u72ec\u7acb\u7684 .ibd \u6587\u4ef6\u3002 \u3010\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f\u6545\u4e8b\uff0c\u6bcf\u4e00\u4e2a\u8868\u81ea\u5df1\u4e00\u4e2aidb\u8fd9\u4e2a\u53eb\u72ec\u7acb\u8868\u7a7a\u95f4\uff0c\u8fd9\u4e2a\u884c\u4e3a\u662f\u53ef\u4ee5\u63a7\u5236\u7684\uff0c\u5728innodb 5.7\u4e4b\u540e\u662f\u9ed8\u8ba4\u5f00\u542f\u7684\u3011</p> <p>\u6211\u4eec\u589e\u5220\u6539\u67e5\u8868\uff0c\u90fd\u662f\u5728\u5bf9\u8fd9\u4e2a.idb\u91cc\u9762\u7684\u6570\u636e\u6253\u4ea4\u9053\u3002</p> <p>\u4e00\u5f20\u8868\u5bf9\u5e94\u4e00\u4e2aidb\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u81ea\u5b9a\u5411\u4e0b\u6709\u6bb5\uff08segment\uff09\u3001\u533a\uff08extent\uff09\u3001\u9875\uff08page\uff09\u3001\u884c\uff08row\uff09\u7b49\u7ed3\u6784\u3002 </p> <p>\u6bb5\u533a\u9875\u90fd\u662f\u6bd4\u884c\u5927\u7684\u5355\u4f4d\uff0c\u6211\u4eec\u91cd\u70b9\u5173\u6ce8\u884c\u548c\u9875\u3002</p>"},{"location":"mysql/data/#_1","title":"\u884c","text":"<p>\u884c\u5c31\u662f\u6570\u636e\u884c\uff0c\u6570\u636e\u5e93\u8868\u4e2d\u7684\u8bb0\u5f55\u90fd\u662f\u6309\u884c\uff08row\uff09\u8fdb\u884c\u5b58\u653e\u7684\u3002 \u884c\u6709\u597d\u51e0\u79cd\u7ec4\u7ec7\u683c\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u8bed\u53e5\u67e5\u770b\u884c\u7684\u683c\u5f0f\u3002</p> <p>InnoDB \u63d0\u4f9b\u4e86 4 \u79cd\u884c\u683c\u5f0f\uff0c\u5206\u522b\u662f Redundant\uff08\u57fa\u672c\u5f03\u7528\uff09\u3001Compact\u3001Dynamic\u548c Compressed \u884c\u683c\u5f0f\u3002</p> <p>5.7\u4e4b\u540e\u9ed8\u8ba4\u662fdynamic\u4e86\u3002 SQL<pre><code>mysql&gt; show variables like \"innodb_default_row_format\";\n+---------------------------+---------+\n| Variable_name             | Value   |\n+---------------------------+---------+\n| innodb_default_row_format | dynamic |\n+---------------------------+---------+\n1 row in set (0.05 sec)\n\nmysql&gt; \n</code></pre> \u884c\u7684\u6570\u636e\uff0c\u5927\u81f4\u5206\u4e3a2\u4e2a\u90e8\u5206\uff1a\u771f\u5b9e\u6570\u636e\uff0c\u8bb0\u5f55\u7684\u989d\u5916\u4fe1\u606f\u3002\u3010\u8fd9\u91cc\u662fcompact\u884c\uff0cdynamic\u4e5f\u5f88\u7c7b\u4f3c\uff0c\u7ec6\u5fae\u5dee\u5f02\u3011</p> <p>\u8bb0\u5f55\u7684\u989d\u5916\u4fe1\u606f\u662f\u6307\uff1a\u8bb0\u5f55\u5934\u4fe1\u606f\uff0c\u8fb9\u957f\u5b57\u6bb5\u957f\u5ea6\u5217\u8868\uff0cNULL\u503c\u5217\u8868\u3002</p>"},{"location":"mysql/data/#_2","title":"\u53d8\u957f\u5b57\u6bb5\u5217\u8868","text":"<p>varchar(n) \u8fd9\u79cd\u5b57\u6bb5\u7684\u957f\u5ea6\u4e0d\u662f\u56fa\u5b9a\u7684\uff0c\u9700\u8981\u53e6\u5916\u4fdd\u5b58\u4e00\u4e0b\u4ed6\u7684\u5b9e\u9645\u957f\u5ea6\u662f\u591a\u5c11\uff0c\u5c31\u4fdd\u5b58\u5728\u884c\u8bb0\u5f55\u7684\u201c\u8bb0\u5f55\u7684\u989d\u5916\u4fe1\u606f\u201d\u4e2d\u7684\u201c\u8fb9\u957f\u5b57\u6bb5\u957f\u5ea6\u5217\u8868\u201d\u3002</p>"},{"location":"mysql/data/#null","title":"NULL\u503c\u5217\u8868","text":"<p>\u8868\u4e2d\u7684\u67d0\u4e9b\u5217\u53ef\u80fd\u4e3aNULL\uff0c\u5982\u679c\u6bcf\u4e00\u4e2aNULL\u90fd\u4fdd\u5b58\u4e00\u4e0b\uff0c\u6d6a\u8d39\u7a7a\u95f4\uff0c\u4f7f\u7528\u4e00\u4e2a\u4f4d\u56fe\u6765\u4fdd\u5b58\u662fNULL\u7684\u5217\u7684\u7f16\u53f7\u3002</p>"},{"location":"mysql/data/#_3","title":"\u884c\u7684\u771f\u5b9e\u6570\u636e","text":"<p>\u9664\u4e86\u6570\u636e\u7684\u5217\u4ee5\u5916\u8fd8\u6709\u51e0\u4e2a\u5b57\u6bb5\uff0crow_id\u3001trx_id\u3001roll_pointer\u3002</p>"},{"location":"mysql/data/#_4","title":"\u9875","text":"<p>\u8bb0\u5f55\u4e00\u6761\u662f\u4e00\u4e2a\u884c\uff0c\u4f46\u662f\u5b58\u50a8\u5f15\u64ce\u4e00\u6b21\u64cd\u4f5c\u4e0d\u662f\u4ee5\u4e00\u884c\u4e3a\u5355\u4f4d\u7684\uff0c\u8fd9\u6837\u592a\u4f4e\u6548\u4e86\uff0c\u800c\u662f\u4ee5\u9875\u4e3a\u5355\u4f4d\u64cd\u4f5c\u7684\u3002 \u5f53\u8981\u8bfb\u4e00\u884c\u7684\u65f6\u5019\uff0c\u4e5f\u662f\u5148\u4ee5\u9875\u4e3a\u5355\u4f4d\uff0c\u5c06\u4e00\u6574\u9875\u8bfb\u5165\u5185\u5b58\u3002</p> <p>\u9ed8\u8ba4\u6bcf\u4e2a\u9875\u7684\u5927\u5c0f\u4e3a 16KB\uff0c\u4e5f\u5c31\u662f\u6700\u591a\u80fd\u4fdd\u8bc1 16KB \u7684\u8fde\u7eed\u5b58\u50a8\u7a7a\u95f4\u3002</p> <p>\u9875\u662finnodb\u5f15\u64ce\u7ba1\u7406\u78c1\u76d8\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u6bcf\u6b21\u8bfb\u5199\u78c1\u76d8\u90fd\u662f\u4ee516kb\u4e3a\u5355\u4f4d\u7684\u3002\u4e00\u6b21\u6700\u5c11\u4ece\u78c1\u76d8\u8bfb16kb\uff0c\u4e00\u6b21\u6700\u5c11\u628a16kb\u7684\u5185\u5bb9\u5237\u5230\u78c1\u76d8\u4e2d\u3002</p> <p>\u9875\u6309\u7167\u529f\u80fd\u5206\u6709\u5f88\u591a\u79cd\uff0c\u4f8b\u5982\u6570\u636e\u9875\u3001undo\u65e5\u5fd7\u9875\u7b49\u7b49\uff0c\u8868\u7684\u6570\u636e\u5b58\u5728\u6570\u636e\u9875\u91cc\u9762\u3002</p>"},{"location":"mysql/data/#_5","title":"\u6570\u636e\u9875\u7684\u5185\u90e8\u7ed3\u6784","text":"<p>\u6570\u636e\u9875\u5e76\u4e0d\u662f\u585e\u6ee1\u4e86\u8bb0\u5f55\uff0c\u9664\u4e86\u8bb0\u5f55\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u7684\u5185\u5bb9\u3002</p> <p></p> <p>\u6570\u636e\u9875\u5305\u62ec\u5f88\u591a\u90e8\u5206\uff0c\u56fe\u91cc\u9762\u662f7\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u7684\u4f5c\u7528\u5982\u4e0b\u3002</p> <p></p> <p>\u5728\u6570\u636e\u9875\u7684File Header\u4e2d\uff0c\u6709\u4e24\u4e2a\u6307\u9488\uff0c\u5206\u522b\u6307\u5411\u4e0a\u4e00\u4e2a\u6570\u636e\u9875\u548c\u4e0b\u4e00\u4e2a\u6570\u636e\u9875\uff0c\u53cc\u5411\u94fe\u8868\u3002</p> <p>\u6570\u636e\u9875\u7684\u4f5c\u7528\u5c31\u662f\u5b58\u7528\u6237\u6570\u636e\uff0c\u5c31\u662fUser record\u90e8\u5206\u3002</p>"},{"location":"os/lock/lock/","title":"\u4eceCAS\u5230\u5206\u5e03\u5f0f\u9501","text":""},{"location":"os/lock/lock/#1","title":"1. \u9501\u7684\u57fa\u7840\u6982\u5ff5","text":""},{"location":"os/lock/lock/#11","title":"1.1 \u4ec0\u4e48\u662f\u9501","text":"<p>\u9501\u662f\u4e00\u79cd\u540c\u6b65\u673a\u5236\uff0c\u7528\u4e8e\u63a7\u5236\u591a\u4e2a\u6267\u884c\u5355\u5143\uff08\u7ebf\u7a0b\u3001\u8fdb\u7a0b\u7b49\uff09\u5bf9\u5171\u4eab\u8d44\u6e90\u7684\u8bbf\u95ee\u3002\u5b83\u786e\u4fdd\u5728\u4efb\u4f55\u65f6\u523b\uff0c\u53ea\u6709\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u7684\u6267\u884c\u5355\u5143\u80fd\u591f\u8bbf\u95ee\u53d7\u4fdd\u62a4\u7684\u8d44\u6e90\u3002</p> <p>\u9501\u7684\u6838\u5fc3\u4f5c\u7528\uff1a - \u4e92\u65a5\uff08Mutual Exclusion\uff09\uff1a\u786e\u4fdd\u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u6267\u884c\u5355\u5143\u80fd\u8bbf\u95ee\u4e34\u754c\u533a - \u540c\u6b65\uff08Synchronization\uff09\uff1a\u534f\u8c03\u591a\u4e2a\u6267\u884c\u5355\u5143\u7684\u6267\u884c\u987a\u5e8f - \u539f\u5b50\u6027\uff08Atomicity\uff09\uff1a\u4fdd\u8bc1\u64cd\u4f5c\u7684\u4e0d\u53ef\u5206\u5272\u6027</p> <p>\u9501\u7684\u57fa\u672c\u64cd\u4f5c\uff1a - <code>acquire()</code>/<code>lock()</code>\uff1a\u83b7\u53d6\u9501\uff0c\u5982\u679c\u9501\u5df2\u88ab\u5360\u7528\u5219\u7b49\u5f85 - <code>release()</code>/<code>unlock()</code>\uff1a\u91ca\u653e\u9501\uff0c\u5524\u9192\u7b49\u5f85\u7684\u6267\u884c\u5355\u5143 - <code>try_lock()</code>\uff1a\u975e\u963b\u585e\u5730\u5c1d\u8bd5\u83b7\u53d6\u9501</p>"},{"location":"os/lock/lock/#12","title":"1.2 \u4e3a\u4ec0\u4e48\u9700\u8981\u9501","text":"<p>\u5728\u5e76\u53d1\u73af\u5883\u4e0b\uff0c\u591a\u4e2a\u6267\u884c\u5355\u5143\u540c\u65f6\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u4f1a\u5bfc\u81f4\u4ee5\u4e0b\u95ee\u9898\uff1a</p>"},{"location":"os/lock/lock/#race-condition","title":"\u7ade\u6001\u6761\u4ef6\uff08Race Condition\uff09","text":"C<pre><code>// \u591a\u7ebf\u7a0b\u540c\u65f6\u6267\u884c\u4ee5\u4e0b\u4ee3\u7801\u4f1a\u5bfc\u81f4\u7ed3\u679c\u4e0d\u786e\u5b9a\nint counter = 0;\nvoid increment() {\n    counter++;  // \u975e\u539f\u5b50\u64cd\u4f5c\uff1a\u8bfb\u53d6-&gt;\u589e\u52a0-&gt;\u5199\u56de\n}\n// \u671f\u671b\u7ed3\u679c\uff1a\u5982\u679c1000\u4e2a\u7ebf\u7a0b\u5404\u81ea\u6267\u884c1\u6b21\uff0ccounter\u5e94\u8be5\u662f1000\n// \u5b9e\u9645\u7ed3\u679c\uff1a\u7531\u4e8e\u7ade\u6001\u6761\u4ef6\uff0c\u7ed3\u679c\u53ef\u80fd\u5c0f\u4e8e1000\n</code></pre>"},{"location":"os/lock/lock/#_1","title":"\u6570\u636e\u4e0d\u4e00\u81f4","text":"<ul> <li>\u810f\u8bfb\uff1a\u8bfb\u53d6\u5230\u672a\u63d0\u4ea4\u7684\u6570\u636e</li> <li>\u4e0d\u53ef\u91cd\u590d\u8bfb\uff1a\u540c\u4e00\u4e8b\u52a1\u4e2d\u591a\u6b21\u8bfb\u53d6\u7ed3\u679c\u4e0d\u540c</li> <li>\u5e7b\u8bfb\uff1a\u67e5\u8be2\u7ed3\u679c\u96c6\u5728\u4e8b\u52a1\u8fc7\u7a0b\u4e2d\u53d1\u751f\u53d8\u5316</li> </ul>"},{"location":"os/lock/lock/#_2","title":"\u5185\u5b58\u53ef\u89c1\u6027\u95ee\u9898","text":"<ul> <li>CPU\u7f13\u5b58\u5bfc\u81f4\u7684\u6570\u636e\u4e0d\u540c\u6b65</li> <li>\u7f16\u8bd1\u5668\u4f18\u5316\u5bfc\u81f4\u7684\u6307\u4ee4\u91cd\u6392\u5e8f</li> <li>\u591a\u6838\u5904\u7406\u5668\u7684\u5185\u5b58\u6a21\u578b\u590d\u6742\u6027</li> </ul> <p>\u6ca1\u6709\u9501\u7684\u540e\u679c\uff1a Java<pre><code>// \u94f6\u884c\u8f6c\u8d26\u793a\u4f8b - \u6ca1\u6709\u9501\u7684\u60c5\u51b5\nclass BankAccount {\n    private int balance = 1000;\n\n    public void withdraw(int amount) {\n        if (balance &gt;= amount) {        // 1. \u68c0\u67e5\u4f59\u989d\n            // \u6b64\u5904\u53ef\u80fd\u88ab\u5176\u4ed6\u7ebf\u7a0b\u4e2d\u65ad\n            balance -= amount;          // 2. \u6263\u9664\u91d1\u989d\n        }\n    }\n}\n// \u95ee\u9898\uff1a\u4e24\u4e2a\u7ebf\u7a0b\u540c\u65f6\u53d6\u6b3e\u53ef\u80fd\u5bfc\u81f4\u4f59\u989d\u4e3a\u8d1f\u6570\n</code></pre></p>"},{"location":"os/lock/lock/#13","title":"1.3 \u9501\u7684\u5206\u7c7b","text":""},{"location":"os/lock/lock/#vs","title":"\u60b2\u89c2\u9501 vs \u4e50\u89c2\u9501","text":"<p>\u60b2\u89c2\u9501\uff08Pessimistic Locking\uff09 - \u539f\u7406\uff1a\u5047\u8bbe\u51b2\u7a81\u4e00\u5b9a\u4f1a\u53d1\u751f\uff0c\u63d0\u524d\u52a0\u9501 - \u7279\u70b9\uff1a\u5728\u64cd\u4f5c\u6570\u636e\u524d\u5148\u83b7\u53d6\u9501\uff0c\u64cd\u4f5c\u5b8c\u6210\u540e\u91ca\u653e\u9501 - \u9002\u7528\u573a\u666f\uff1a\u5199\u64cd\u4f5c\u9891\u7e41\u3001\u51b2\u7a81\u6982\u7387\u9ad8\u7684\u573a\u666f - \u4f18\u70b9\uff1a\u80fd\u591f\u6709\u6548\u907f\u514d\u51b2\u7a81\uff0c\u6570\u636e\u4e00\u81f4\u6027\u5f3a - \u7f3a\u70b9\uff1a\u6027\u80fd\u5f00\u9500\u5927\uff0c\u53ef\u80fd\u5bfc\u81f4\u6b7b\u9501</p> SQL<pre><code>-- \u6570\u636e\u5e93\u60b2\u89c2\u9501\u793a\u4f8b\nBEGIN TRANSACTION;\nSELECT * FROM accounts WHERE id = 1 FOR UPDATE;  -- \u52a0\u9501\nUPDATE accounts SET balance = balance - 100 WHERE id = 1;\nCOMMIT;\n</code></pre> <p>\u4e50\u89c2\u9501\uff08Optimistic Locking\uff09 - \u539f\u7406\uff1a\u5047\u8bbe\u51b2\u7a81\u5f88\u5c11\u53d1\u751f\uff0c\u53ea\u5728\u63d0\u4ea4\u65f6\u68c0\u67e5 - \u7279\u70b9\uff1a\u4e0d\u52a0\u9501\uff0c\u901a\u8fc7\u7248\u672c\u53f7\u6216\u65f6\u95f4\u6233\u68c0\u6d4b\u51b2\u7a81 - \u9002\u7528\u573a\u666f\uff1a\u8bfb\u64cd\u4f5c\u9891\u7e41\u3001\u51b2\u7a81\u6982\u7387\u4f4e\u7684\u573a\u666f - \u4f18\u70b9\uff1a\u6027\u80fd\u597d\uff0c\u65e0\u6b7b\u9501\u98ce\u9669 - \u7f3a\u70b9\uff1a\u51b2\u7a81\u65f6\u9700\u8981\u91cd\u8bd5\uff0c\u53ef\u80fd\u5bfc\u81f4\u9965\u997f</p> Java<pre><code>// \u4e50\u89c2\u9501\u793a\u4f8b - \u7248\u672c\u53f7\u673a\u5236\nclass OptimisticAccount {\n    private int balance;\n    private int version;\n\n    public boolean updateBalance(int newBalance, int expectedVersion) {\n        if (version == expectedVersion) {\n            balance = newBalance;\n            version++;\n            return true;  // \u66f4\u65b0\u6210\u529f\n        }\n        return false;     // \u7248\u672c\u51b2\u7a81\uff0c\u66f4\u65b0\u5931\u8d25\n    }\n}\n</code></pre>"},{"location":"os/lock/lock/#vs_1","title":"\u6392\u4ed6\u9501 vs \u5171\u4eab\u9501","text":"<p>\u6392\u4ed6\u9501\uff08Exclusive Lock / Write Lock\uff09 - \u7279\u70b9\uff1a\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u88ab\u4e00\u4e2a\u6267\u884c\u5355\u5143\u6301\u6709 - \u6743\u9650\uff1a\u6301\u6709\u8005\u53ef\u4ee5\u8bfb\u5199\u8d44\u6e90 - \u884c\u4e3a\uff1a\u5176\u4ed6\u6267\u884c\u5355\u5143\u5fc5\u987b\u7b49\u5f85 - \u5e94\u7528\uff1a\u5199\u64cd\u4f5c\u3001\u4fee\u6539\u64cd\u4f5c</p> <p>\u5171\u4eab\u9501\uff08Shared Lock / Read Lock\uff09 - \u7279\u70b9\uff1a\u540c\u4e00\u65f6\u95f4\u53ef\u4ee5\u88ab\u591a\u4e2a\u6267\u884c\u5355\u5143\u6301\u6709 - \u6743\u9650\uff1a\u6301\u6709\u8005\u53ea\u80fd\u8bfb\u53d6\u8d44\u6e90 - \u884c\u4e3a\uff1a\u4e0e\u6392\u4ed6\u9501\u4e92\u65a5\uff0c\u4e0e\u5176\u4ed6\u5171\u4eab\u9501\u517c\u5bb9 - \u5e94\u7528\uff1a\u8bfb\u64cd\u4f5c\u3001\u67e5\u8be2\u64cd\u4f5c</p> Java<pre><code>// \u8bfb\u5199\u9501\u793a\u4f8b\nReadWriteLock rwLock = new ReentrantReadWriteLock();\nLock readLock = rwLock.readLock();\nLock writeLock = rwLock.writeLock();\n\n// \u8bfb\u64cd\u4f5c\nreadLock.lock();\ntry {\n    // \u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u540c\u65f6\u8bfb\u53d6\n    return data.getValue();\n} finally {\n    readLock.unlock();\n}\n\n// \u5199\u64cd\u4f5c\nwriteLock.lock();\ntry {\n    // \u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5199\u5165\n    data.setValue(newValue);\n} finally {\n    writeLock.unlock();\n}\n</code></pre>"},{"location":"os/lock/lock/#vs_2","title":"\u53ef\u91cd\u5165\u9501 vs \u4e0d\u53ef\u91cd\u5165\u9501","text":"<p>\u53ef\u91cd\u5165\u9501\uff08Reentrant Lock\uff09 - \u7279\u70b9\uff1a\u540c\u4e00\u6267\u884c\u5355\u5143\u53ef\u4ee5\u591a\u6b21\u83b7\u53d6\u540c\u4e00\u628a\u9501 - \u673a\u5236\uff1a\u8bb0\u5f55\u9501\u7684\u6301\u6709\u8005\u548c\u6301\u6709\u6b21\u6570 - \u4f18\u70b9\uff1a\u907f\u514d\u6b7b\u9501\uff0c\u652f\u6301\u9012\u5f52\u8c03\u7528 - \u7f3a\u70b9\uff1a\u5b9e\u73b0\u590d\u6742\uff0c\u6709\u989d\u5916\u5f00\u9500</p> Java<pre><code>// \u53ef\u91cd\u5165\u9501\u793a\u4f8b\nReentrantLock lock = new ReentrantLock();\n\nvoid method1() {\n    lock.lock();\n    try {\n        method2(); // \u53ef\u4ee5\u518d\u6b21\u83b7\u53d6\u9501\uff0c\u4e0d\u4f1a\u6b7b\u9501\n    } finally {\n        lock.unlock();\n    }\n}\n\nvoid method2() {\n    lock.lock();  // \u91cd\u5165\u6b21\u6570 +1\n    try {\n        // \u4e1a\u52a1\u903b\u8f91\n    } finally {\n        lock.unlock();  // \u91cd\u5165\u6b21\u6570 -1\n    }\n}\n</code></pre> <p>\u4e0d\u53ef\u91cd\u5165\u9501\uff08Non-Reentrant Lock\uff09 - \u7279\u70b9\uff1a\u540c\u4e00\u6267\u884c\u5355\u5143\u4e0d\u80fd\u91cd\u590d\u83b7\u53d6 - \u98ce\u9669\uff1a\u5bb9\u6613\u5bfc\u81f4\u6b7b\u9501 - \u4f18\u70b9\uff1a\u5b9e\u73b0\u7b80\u5355\uff0c\u6027\u80fd\u8f83\u597d - \u5e94\u7528\uff1a\u5bf9\u6027\u80fd\u8981\u6c42\u6781\u9ad8\u4e14\u786e\u4fdd\u4e0d\u4f1a\u91cd\u5165\u7684\u573a\u666f</p>"},{"location":"os/lock/lock/#vs_3","title":"\u516c\u5e73\u9501 vs \u975e\u516c\u5e73\u9501","text":"<p>\u516c\u5e73\u9501\uff08Fair Lock\uff09 - \u673a\u5236\uff1a\u6309\u7167\u8bf7\u6c42\u9501\u7684\u987a\u5e8f\uff08FIFO\uff09\u5206\u914d - \u4f18\u70b9\uff1a\u907f\u514d\u9965\u997f\u95ee\u9898\uff0c\u4fdd\u8bc1\u516c\u5e73\u6027 - \u7f3a\u70b9\uff1a\u6027\u80fd\u76f8\u5bf9\u8f83\u4f4e\uff0c\u541e\u5410\u91cf\u5c0f - \u5e94\u7528\uff1a\u5bf9\u516c\u5e73\u6027\u8981\u6c42\u9ad8\u7684\u573a\u666f</p> <p>\u975e\u516c\u5e73\u9501\uff08Unfair Lock\uff09 - \u673a\u5236\uff1a\u4e0d\u4fdd\u8bc1\u83b7\u53d6\u9501\u7684\u987a\u5e8f\uff0c\u5141\u8bb8\"\u63d2\u961f\" - \u4f18\u70b9\uff1a\u6027\u80fd\u66f4\u597d\uff0c\u541e\u5410\u91cf\u66f4\u9ad8 - \u7f3a\u70b9\uff1a\u53ef\u80fd\u5bfc\u81f4\u67d0\u4e9b\u7ebf\u7a0b\u957f\u65f6\u95f4\u7b49\u5f85 - \u5e94\u7528\uff1a\u5bf9\u6027\u80fd\u8981\u6c42\u9ad8\u7684\u573a\u666f</p> Java<pre><code>// \u516c\u5e73\u9501 vs \u975e\u516c\u5e73\u9501\u914d\u7f6e\nReentrantLock fairLock = new ReentrantLock(true);     // \u516c\u5e73\u9501\nReentrantLock unfairLock = new ReentrantLock(false);  // \u975e\u516c\u5e73\u9501\uff08\u9ed8\u8ba4\uff09\n</code></pre> <p>\u9501\u5206\u7c7b\u603b\u7ed3\u8868\uff1a</p> \u5206\u7c7b\u7ef4\u5ea6 \u7c7b\u578b1 \u7c7b\u578b2 \u4e3b\u8981\u533a\u522b \u51b2\u7a81\u5047\u8bbe \u60b2\u89c2\u9501 \u4e50\u89c2\u9501 \u662f\u5426\u63d0\u524d\u52a0\u9501 \u8bbf\u95ee\u6743\u9650 \u6392\u4ed6\u9501 \u5171\u4eab\u9501 \u662f\u5426\u5141\u8bb8\u5e76\u53d1\u8bfb \u91cd\u5165\u6027 \u53ef\u91cd\u5165\u9501 \u4e0d\u53ef\u91cd\u5165\u9501 \u662f\u5426\u652f\u6301\u9012\u5f52\u83b7\u53d6 \u516c\u5e73\u6027 \u516c\u5e73\u9501 \u975e\u516c\u5e73\u9501 \u662f\u5426\u6309\u987a\u5e8f\u5206\u914d"},{"location":"os/lock/lock/#2-cas","title":"2. \u786c\u4ef6\u5c42\u9762\uff1a\u539f\u5b50\u64cd\u4f5c\u4e0eCAS","text":"<p>\u5728\u591a\u6838\u5904\u7406\u5668\u73af\u5883\u4e2d\uff0c\u786c\u4ef6\u5c42\u9762\u7684\u539f\u5b50\u64cd\u4f5c\u662f\u6240\u6709\u4e0a\u5c42\u9501\u673a\u5236\u7684\u57fa\u7840\u3002\u7406\u89e3\u786c\u4ef6\u5982\u4f55\u4fdd\u8bc1\u64cd\u4f5c\u7684\u539f\u5b50\u6027\uff0c\u5bf9\u4e8e\u6df1\u5165\u7406\u89e3\u9501\u7684\u5b9e\u73b0\u539f\u7406\u81f3\u5173\u91cd\u8981\u3002</p>"},{"location":"os/lock/lock/#21-cpu","title":"2.1 CPU\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae","text":""},{"location":"os/lock/lock/#_3","title":"\u7f13\u5b58\u67b6\u6784\u4e0e\u95ee\u9898","text":"<p>\u73b0\u4ee3\u591a\u6838\u5904\u7406\u5668\u91c7\u7528\u591a\u7ea7\u7f13\u5b58\u67b6\u6784\uff0c\u6bcf\u4e2aCPU\u6838\u5fc3\u90fd\u6709\u72ec\u7acb\u7684L1\u3001L2\u7f13\u5b58\uff0c\u591a\u4e2a\u6838\u5fc3\u5171\u4eabL3\u7f13\u5b58\uff1a</p> Text Only<pre><code>CPU Core 0    CPU Core 1    CPU Core 2    CPU Core 3\n   L1            L1            L1            L1\n   L2            L2            L2            L2\n   |             |             |             |\n   +-------------+-------------+-------------+\n                      L3 Cache\n                         |\n                    Main Memory\n</code></pre> <p>\u7f13\u5b58\u4e00\u81f4\u6027\u95ee\u9898\uff1a - \u540c\u4e00\u5185\u5b58\u5730\u5740\u7684\u6570\u636e\u53ef\u80fd\u540c\u65f6\u5b58\u5728\u4e8e\u591a\u4e2aCPU\u7f13\u5b58\u4e2d - \u5f53\u4e00\u4e2aCPU\u4fee\u6539\u6570\u636e\u65f6\uff0c\u5176\u4ed6CPU\u7684\u7f13\u5b58\u53ef\u80fd\u5305\u542b\u8fc7\u671f\u6570\u636e - \u9700\u8981\u534f\u8bae\u6765\u7ef4\u62a4\u7f13\u5b58\u95f4\u7684\u6570\u636e\u4e00\u81f4\u6027</p>"},{"location":"os/lock/lock/#mesi","title":"MESI\u534f\u8bae","text":"<p>MESI\u662f\u6700\u5e38\u7528\u7684\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\uff0c\u5b9a\u4e49\u4e86\u56db\u79cd\u7f13\u5b58\u884c\u72b6\u6001\uff1a</p> <ul> <li>Modified (M)\uff1a\u6570\u636e\u88ab\u4fee\u6539\u4e14\u53ea\u5b58\u5728\u4e8e\u5f53\u524d\u7f13\u5b58\u4e2d</li> <li>Exclusive (E)\uff1a\u6570\u636e\u72ec\u5360\u4e14\u4e0e\u5185\u5b58\u4e00\u81f4</li> <li>Shared (S)\uff1a\u6570\u636e\u5728\u591a\u4e2a\u7f13\u5b58\u4e2d\u5171\u4eab\u4e14\u4e0e\u5185\u5b58\u4e00\u81f4</li> <li>Invalid (I)\uff1a\u7f13\u5b58\u884c\u65e0\u6548</li> </ul> C<pre><code>// MESI\u72b6\u6001\u8f6c\u6362\u793a\u4f8b\n// \u521d\u59cb\u72b6\u6001\uff1a\u6240\u6709\u7f13\u5b58\u884c\u90fd\u662fInvalid\nint shared_var = 0;\n\n// CPU0\u8bfb\u53d6shared_var\n// CPU0: I -&gt; E (\u72ec\u5360\u72b6\u6001)\n\n// CPU1\u8bfb\u53d6shared_var  \n// CPU0: E -&gt; S, CPU1: I -&gt; S (\u5171\u4eab\u72b6\u6001)\n\n// CPU0\u5199\u5165shared_var\n// CPU0: S -&gt; M, CPU1: S -&gt; I (CPU0\u4fee\u6539\uff0cCPU1\u5931\u6548)\n</code></pre>"},{"location":"os/lock/lock/#_4","title":"\u603b\u7ebf\u9501\u5b9a\u4e0e\u7f13\u5b58\u9501\u5b9a","text":"<ul> <li>\u603b\u7ebf\u9501\u5b9a\uff1a\u9501\u5b9a\u6574\u4e2a\u7cfb\u7edf\u603b\u7ebf\uff0c\u6027\u80fd\u5f00\u9500\u5927</li> <li>\u7f13\u5b58\u9501\u5b9a\uff1a\u53ea\u9501\u5b9a\u76f8\u5173\u7684\u7f13\u5b58\u884c\uff0c\u6027\u80fd\u66f4\u597d</li> </ul>"},{"location":"os/lock/lock/#22","title":"2.2 \u539f\u5b50\u64cd\u4f5c\u6307\u4ee4","text":""},{"location":"os/lock/lock/#x86lock","title":"x86\u67b6\u6784\u7684LOCK\u524d\u7f00","text":"<p>LOCK\u524d\u7f00\u7684\u4f5c\u7528\uff1a - \u786e\u4fdd\u6307\u4ee4\u6267\u884c\u671f\u95f4\u5bf9\u5185\u5b58\u7684\u72ec\u5360\u8bbf\u95ee - \u89e6\u53d1\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\uff0c\u4fdd\u8bc1\u5176\u4ed6CPU\u770b\u5230\u6700\u65b0\u503c - \u63d0\u4f9b\u5185\u5b58\u5c4f\u969c\u8bed\u4e49\uff0c\u9632\u6b62\u6307\u4ee4\u91cd\u6392\u5e8f</p> Text Only<pre><code>; x86\u539f\u5b50\u64cd\u4f5c\u793a\u4f8b\nlock incl %eax          ; \u539f\u5b50\u9012\u589e\nlock decl (%ebx)        ; \u539f\u5b50\u9012\u51cf\nlock xaddl %eax, (%ebx) ; \u539f\u5b50\u4ea4\u6362\u5e76\u76f8\u52a0\nlock cmpxchgl %eax, (%ebx) ; \u539f\u5b50\u6bd4\u8f83\u5e76\u4ea4\u6362\n</code></pre> <p>C\u8bed\u8a00\u4e2d\u7684\u4f7f\u7528\uff1a C<pre><code>#include &lt;stdatomic.h&gt;\n\n// \u539f\u5b50\u9012\u589e\natomic_int counter = ATOMIC_VAR_INIT(0);\natomic_fetch_add(&amp;counter, 1);\n\n// \u539f\u5b50\u6bd4\u8f83\u5e76\u4ea4\u6362\nint expected = 0;\nint desired = 1;\nbool success = atomic_compare_exchange_strong(&amp;counter, &amp;expected, desired);\n</code></pre></p>"},{"location":"os/lock/lock/#armldrexstrex","title":"ARM\u67b6\u6784\u7684LDREX/STREX","text":"<p>ARM\u67b6\u6784\u4f7f\u7528Load-Link/Store-Conditional\u6a21\u5f0f\uff1a</p> Text Only<pre><code>; ARM\u539f\u5b50\u64cd\u4f5c\u793a\u4f8b\nretry:\n    ldrex   r1, [r0]        ; \u72ec\u5360\u52a0\u8f7d\n    add     r1, r1, #1      ; \u503c\u9012\u589e\n    strex   r2, r1, [r0]    ; \u72ec\u5360\u5b58\u50a8\n    cmp     r2, #0          ; \u68c0\u67e5\u662f\u5426\u6210\u529f\n    bne     retry           ; \u5931\u8d25\u5219\u91cd\u8bd5\n</code></pre> <p>\u7279\u70b9\uff1a - LDREX\u6807\u8bb0\u5185\u5b58\u5730\u5740\u4e3a\u72ec\u5360\u8bbf\u95ee - STREX\u53ea\u6709\u5728\u72ec\u5360\u6807\u8bb0\u6709\u6548\u65f6\u624d\u80fd\u6210\u529f - \u5982\u679c\u5176\u4ed6CPU\u8bbf\u95ee\u4e86\u8be5\u5730\u5740\uff0c\u72ec\u5360\u6807\u8bb0\u4f1a\u88ab\u6e05\u9664</p>"},{"location":"os/lock/lock/#23-cas","title":"2.3 CAS\u6307\u4ee4\u8be6\u89e3","text":""},{"location":"os/lock/lock/#compare-and-swap","title":"Compare-And-Swap\u539f\u7406","text":"<p>CAS\u662f\u4e00\u79cd\u4e50\u89c2\u7684\u539f\u5b50\u64cd\u4f5c\uff0c\u5305\u542b\u4e09\u4e2a\u53c2\u6570\uff1a - \u5185\u5b58\u5730\u5740V\uff1a\u8981\u64cd\u4f5c\u7684\u53d8\u91cf\u5730\u5740 - \u671f\u671b\u503cA\uff1a\u671f\u671b\u7684\u5f53\u524d\u503c - \u65b0\u503cB\uff1a\u8981\u8bbe\u7f6e\u7684\u65b0\u503c</p> C<pre><code>// CAS\u4f2a\u4ee3\u7801\nbool compare_and_swap(int* ptr, int expected, int new_value) {\n    if (*ptr == expected) {\n        *ptr = new_value;\n        return true;  // \u6210\u529f\n    }\n    return false;     // \u5931\u8d25\n}\n</code></pre> <p>CAS\u7684\u539f\u5b50\u6027\u4fdd\u8bc1\uff1a C<pre><code>// \u57fa\u4e8eCAS\u5b9e\u73b0\u7684\u539f\u5b50\u9012\u589e\nint atomic_increment(atomic_int* ptr) {\n    int current, new_value;\n    do {\n        current = atomic_load(ptr);\n        new_value = current + 1;\n    } while (!atomic_compare_exchange_weak(ptr, &amp;current, new_value));\n    return new_value;\n}\n</code></pre></p>"},{"location":"os/lock/lock/#aba","title":"ABA\u95ee\u9898\u53ca\u89e3\u51b3\u65b9\u6848","text":"<p>ABA\u95ee\u9898\u63cf\u8ff0\uff1a C<pre><code>// \u7ebf\u7a0b1\u7684\u6267\u884c\u5e8f\u5217\nint* ptr = &amp;shared_value;  // \u5047\u8bbeshared_value = A\n// ... \u88ab\u6682\u505c ...\n// \u6b64\u65f6\u5176\u4ed6\u7ebf\u7a0b\u5c06\u503c\u6539\u4e3aB\uff0c\u7136\u540e\u53c8\u6539\u56deA\nbool success = CAS(ptr, A, C);  // \u6210\u529f\uff0c\u4f46\u5b9e\u9645\u4e0a\u503c\u5df2\u7ecf\u88ab\u4fee\u6539\u8fc7\n</code></pre></p> <p>\u95ee\u9898\u7684\u5371\u5bb3\uff1a - \u6808\u7684ABA\u95ee\u9898\u53ef\u80fd\u5bfc\u81f4\u60ac\u5782\u6307\u9488 - \u94fe\u8868\u64cd\u4f5c\u53ef\u80fd\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u6216\u8bbf\u95ee\u65e0\u6548\u5185\u5b58</p> <p>\u89e3\u51b3\u65b9\u68481\uff1a\u7248\u672c\u53f7/\u6807\u8bb0 C<pre><code>struct versioned_ptr {\n    void* ptr;\n    uint64_t version;\n};\n\nbool versioned_cas(struct versioned_ptr* target, \n                   struct versioned_ptr expected,\n                   struct versioned_ptr new_val) {\n    // \u6bd4\u8f83\u6307\u9488\u548c\u7248\u672c\u53f7\n    return __sync_bool_compare_and_swap(target, expected, new_val);\n}\n</code></pre></p> <p>\u89e3\u51b3\u65b9\u68482\uff1a\u53cc\u91cdCAS C<pre><code>// \u4f7f\u7528\u4e24\u4e2aCAS\u64cd\u4f5c\uff0c\u786e\u4fdd\u7248\u672c\u53f7\u7684\u4e00\u81f4\u6027\nstruct double_cas_node {\n    void* data;\n    struct double_cas_node* next;\n    atomic_uint version;\n};\n</code></pre></p> <p>\u89e3\u51b3\u65b9\u68483\uff1a\u5185\u5b58\u56de\u6536\u5ef6\u8fdf\uff08Hazard Pointers\uff09 C<pre><code>// \u5ef6\u8fdf\u91ca\u653e\u5185\u5b58\uff0c\u76f4\u5230\u786e\u4fdd\u6ca1\u6709\u7ebf\u7a0b\u5728\u4f7f\u7528\nvoid safe_delete(void* ptr) {\n    add_to_hazard_list(ptr);\n    // \u7a0d\u540e\u5728\u5b89\u5168\u65f6\u673a\u91ca\u653e\n}\n</code></pre></p>"},{"location":"os/lock/lock/#_5","title":"\u5185\u5b58\u5c4f\u969c\u4e0e\u53ef\u89c1\u6027","text":"<p>\u5185\u5b58\u5c4f\u969c\u7c7b\u578b\uff1a - LoadLoad\u5c4f\u969c\uff1a\u9632\u6b62\u8bfb\u64cd\u4f5c\u91cd\u6392\u5e8f - StoreStore\u5c4f\u969c\uff1a\u9632\u6b62\u5199\u64cd\u4f5c\u91cd\u6392\u5e8f - LoadStore\u5c4f\u969c\uff1a\u9632\u6b62\u8bfb\u64cd\u4f5c\u4e0e\u5199\u64cd\u4f5c\u91cd\u6392\u5e8f - StoreLoad\u5c4f\u969c\uff1a\u6700\u5f3a\u7684\u5c4f\u969c\uff0c\u9632\u6b62\u6240\u6709\u91cd\u6392\u5e8f</p> C<pre><code>// \u4e0d\u540c\u5f3a\u5ea6\u7684\u5185\u5b58\u5c4f\u969c\natomic_thread_fence(memory_order_acquire);   // \u83b7\u53d6\u8bed\u4e49\natomic_thread_fence(memory_order_release);   // \u91ca\u653e\u8bed\u4e49\natomic_thread_fence(memory_order_acq_rel);   // \u83b7\u53d6-\u91ca\u653e\u8bed\u4e49\natomic_thread_fence(memory_order_seq_cst);   // \u987a\u5e8f\u4e00\u81f4\u6027\n</code></pre> <p>\u53ef\u89c1\u6027\u4fdd\u8bc1\uff1a C<pre><code>// \u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u6a21\u5f0f\natomic_int flag = ATOMIC_VAR_INIT(0);\nint data = 0;\n\n// \u751f\u4ea7\u8005\nvoid producer() {\n    data = 42;                           // 1. \u5199\u5165\u6570\u636e\n    atomic_store(&amp;flag, 1);              // 2. \u8bbe\u7f6e\u6807\u5fd7\uff08release\u8bed\u4e49\uff09\n}\n\n// \u6d88\u8d39\u8005\nvoid consumer() {\n    while (atomic_load(&amp;flag) == 0);     // 3. \u7b49\u5f85\u6807\u5fd7\uff08acquire\u8bed\u4e49\uff09\n    printf(\"Data: %d\\n\", data);         // 4. \u8bfb\u53d6\u6570\u636e\uff08\u4fdd\u8bc1\u80fd\u770b\u523042\uff09\n}\n</code></pre></p> <p>CAS\u5728\u4e0d\u540c\u67b6\u6784\u4e0a\u7684\u5b9e\u73b0\uff1a</p> \u67b6\u6784 \u6307\u4ee4 \u7279\u70b9 x86-64 CMPXCHG \u652f\u63011/2/4/8\u5b57\u8282\u7684CAS ARM LDREX/STREX Load-Link/Store-Conditional\u6a21\u5f0f MIPS LL/SC \u7c7b\u4f3cARM\u7684LL/SC\u673a\u5236 RISC-V LR/SC Load-Reserved/Store-Conditional <p>\u6027\u80fd\u8003\u8651\uff1a - CAS\u64cd\u4f5c\u7684\u5ef6\u8fdf\u901a\u5e38\u6bd4\u666e\u901a\u5185\u5b58\u8bbf\u95ee\u9ad810-100\u500d - \u9ad8\u7ade\u4e89\u60c5\u51b5\u4e0b\uff0cCAS\u53ef\u80fd\u9891\u7e41\u5931\u8d25\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d - \u73b0\u4ee3CPU\u63d0\u4f9b\u4e86\u5404\u79cd\u4f18\u5316\uff0c\u5982\u7f13\u5b58\u884c\u72ec\u5360\u9884\u6d4b</p>"},{"location":"os/lock/lock/#3","title":"3. \u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\uff1a\u5185\u6838\u9501\u673a\u5236","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u5728\u786c\u4ef6\u539f\u5b50\u64cd\u4f5c\u7684\u57fa\u7840\u4e0a\uff0c\u5b9e\u73b0\u4e86\u66f4\u9ad8\u7ea7\u7684\u9501\u673a\u5236\u3002\u8fd9\u4e9b\u5185\u6838\u7ea7\u9501\u4e3a\u7528\u6237\u7a7a\u95f4\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u53ef\u9760\u7684\u540c\u6b65\u539f\u8bed\u3002</p>"},{"location":"os/lock/lock/#31-spinlock","title":"3.1 \u81ea\u65cb\u9501\uff08Spinlock\uff09","text":""},{"location":"os/lock/lock/#_6","title":"\u5b9e\u73b0\u539f\u7406","text":"<p>\u81ea\u65cb\u9501\u662f\u6700\u7b80\u5355\u7684\u9501\u673a\u5236\uff0c\u5f53\u9501\u4e0d\u53ef\u7528\u65f6\uff0c\u7ebf\u7a0b\u4f1a\u6301\u7eed\u68c0\u67e5\u9501\u72b6\u6001\u800c\u4e0d\u8fdb\u5165\u7761\u7720\u72b6\u6001\u3002</p> C<pre><code>// \u7b80\u5355\u81ea\u65cb\u9501\u5b9e\u73b0\ntypedef struct {\n    atomic_int locked;\n} spinlock_t;\n\nvoid spin_lock(spinlock_t* lock) {\n    while (atomic_exchange(&amp;lock-&gt;locked, 1)) {\n        // \u81ea\u65cb\u7b49\u5f85\n        while (atomic_load(&amp;lock-&gt;locked)) {\n            __builtin_ia32_pause();  // x86 PAUSE\u6307\u4ee4\uff0c\u964d\u4f4e\u529f\u8017\n        }\n    }\n}\n\nvoid spin_unlock(spinlock_t* lock) {\n    atomic_store(&amp;lock-&gt;locked, 0);\n}\n</code></pre>"},{"location":"os/lock/lock/#_7","title":"\u9002\u7528\u573a\u666f","text":"<ul> <li>\u4e34\u754c\u533a\u5f88\u77ed\uff1a\u6267\u884c\u65f6\u95f4\u901a\u5e38\u5c0f\u4e8e\u7ebf\u7a0b\u5207\u6362\u5f00\u9500</li> <li>\u591a\u6838\u7cfb\u7edf\uff1a\u5355\u6838\u7cfb\u7edf\u4e2d\u81ea\u65cb\u662f\u6d6a\u8d39\u7684</li> <li>\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff1a\u4e0d\u80fd\u7761\u7720\u7684\u4e0a\u4e0b\u6587</li> <li>\u5185\u6838\u62a2\u5360\u5173\u95ed\u65f6\uff1a\u907f\u514d\u6b7b\u9501</li> </ul>"},{"location":"os/lock/lock/#_8","title":"\u6027\u80fd\u7279\u70b9","text":"<p>\u4f18\u70b9\uff1a - \u65e0\u7cfb\u7edf\u8c03\u7528\u5f00\u9500 - \u54cd\u5e94\u65f6\u95f4\u77ed - \u5b9e\u73b0\u7b80\u5355</p> <p>\u7f3a\u70b9\uff1a - \u6d6a\u8d39CPU\u5468\u671f - \u53ef\u80fd\u5bfc\u81f4\u7f13\u5b58\u884c\u98a0\u7c38 - \u4e0d\u9002\u5408\u957f\u65f6\u95f4\u6301\u6709</p>"},{"location":"os/lock/lock/#32-mutex","title":"3.2 \u4e92\u65a5\u9501\uff08Mutex\uff09","text":""},{"location":"os/lock/lock/#_9","title":"\u5b9e\u73b0\u673a\u5236","text":"<p>\u4e92\u65a5\u9501\u5728\u65e0\u6cd5\u83b7\u53d6\u9501\u65f6\u4f1a\u5c06\u7ebf\u7a0b\u6302\u8d77\uff0c\u907f\u514d\u6d6a\u8d39CPU\u8d44\u6e90\u3002</p> C<pre><code>// \u7b80\u5316\u7684mutex\u5b9e\u73b0\ntypedef struct {\n    atomic_int state;        // 0=\u672a\u9501\u5b9a, 1=\u5df2\u9501\u5b9a\n    wait_queue_t waiters;    // \u7b49\u5f85\u961f\u5217\n} mutex_t;\n\nvoid mutex_lock(mutex_t* mutex) {\n    if (atomic_exchange(&amp;mutex-&gt;state, 1) == 0) {\n        return;  // \u5feb\u901f\u8def\u5f84\uff1a\u76f4\u63a5\u83b7\u53d6\u9501\n    }\n\n    // \u6162\u901f\u8def\u5f84\uff1a\u9700\u8981\u7b49\u5f85\n    while (atomic_exchange(&amp;mutex-&gt;state, 1) != 0) {\n        add_to_waitqueue(&amp;mutex-&gt;waiters, current_thread);\n        schedule();  // \u8ba9\u51faCPU\n    }\n}\n\nvoid mutex_unlock(mutex_t* mutex) {\n    atomic_store(&amp;mutex-&gt;state, 0);\n    wake_up_waiters(&amp;mutex-&gt;waiters);\n}\n</code></pre>"},{"location":"os/lock/lock/#_10","title":"\u4e0e\u81ea\u65cb\u9501\u7684\u533a\u522b","text":"\u7279\u6027 \u81ea\u65cb\u9501 \u4e92\u65a5\u9501 \u7b49\u5f85\u65b9\u5f0f \u4e3b\u52a8\u8f6e\u8be2 \u88ab\u52a8\u7761\u7720 CPU\u4f7f\u7528 \u6301\u7eed\u5360\u7528 \u91ca\u653eCPU \u54cd\u5e94\u65f6\u95f4 \u975e\u5e38\u5feb \u8f83\u6162\uff08\u9700\u8981\u5524\u9192\uff09 \u9002\u7528\u573a\u666f \u77ed\u4e34\u754c\u533a \u957f\u4e34\u754c\u533a \u4e0a\u4e0b\u6587 \u4efb\u4f55\u4e0a\u4e0b\u6587 \u53ef\u7761\u7720\u4e0a\u4e0b\u6587"},{"location":"os/lock/lock/#_11","title":"\u4f18\u5148\u7ea7\u7ee7\u627f\u95ee\u9898","text":"<p>\u5f53\u9ad8\u4f18\u5148\u7ea7\u7ebf\u7a0b\u7b49\u5f85\u4f4e\u4f18\u5148\u7ea7\u7ebf\u7a0b\u6301\u6709\u7684\u9501\u65f6\uff0c\u53ef\u80fd\u53d1\u751f\u4f18\u5148\u7ea7\u53cd\u8f6c\uff1a</p> C<pre><code>// \u4f18\u5148\u7ea7\u7ee7\u627f\u534f\u8bae\nvoid mutex_lock_with_inheritance(mutex_t* mutex) {\n    thread_t* owner = mutex-&gt;owner;\n    if (owner &amp;&amp; owner-&gt;priority &lt; current_thread-&gt;priority) {\n        // \u4e34\u65f6\u63d0\u5347\u9501\u6301\u6709\u8005\u7684\u4f18\u5148\u7ea7\n        boost_priority(owner, current_thread-&gt;priority);\n    }\n    // ...\u5e38\u89c4\u9501\u903b\u8f91...\n}\n</code></pre>"},{"location":"os/lock/lock/#33-rwlock","title":"3.3 \u8bfb\u5199\u9501\uff08RWLock\uff09","text":""},{"location":"os/lock/lock/#_12","title":"\u5b9e\u73b0\u539f\u7406","text":"<p>\u8bfb\u5199\u9501\u5141\u8bb8\u591a\u4e2a\u8bfb\u8005\u5e76\u53d1\u8bbf\u95ee\uff0c\u4f46\u5199\u8005\u9700\u8981\u72ec\u5360\u8bbf\u95ee\u3002</p> C<pre><code>typedef struct {\n    atomic_int state;        // \u9ad816\u4f4d\uff1a\u8bfb\u8005\u8ba1\u6570\uff0c\u4f4e16\u4f4d\uff1a\u5199\u8005\u6807\u8bb0\n    wait_queue_t readers;    // \u8bfb\u8005\u7b49\u5f85\u961f\u5217\n    wait_queue_t writers;    // \u5199\u8005\u7b49\u5f85\u961f\u5217\n} rwlock_t;\n\n#define READER_MASK  0xFFFF0000\n#define WRITER_MASK  0x0000FFFF\n\nvoid read_lock(rwlock_t* lock) {\n    while (true) {\n        int old_state = atomic_load(&amp;lock-&gt;state);\n        if (old_state &amp; WRITER_MASK) {\n            // \u6709\u5199\u8005\uff0c\u9700\u8981\u7b49\u5f85\n            wait_on_queue(&amp;lock-&gt;readers);\n            continue;\n        }\n\n        int new_state = old_state + (1 &lt;&lt; 16);  // \u8bfb\u8005\u8ba1\u6570+1\n        if (atomic_compare_exchange(&amp;lock-&gt;state, &amp;old_state, new_state)) {\n            break;\n        }\n    }\n}\n\nvoid write_lock(rwlock_t* lock) {\n    while (true) {\n        int old_state = atomic_load(&amp;lock-&gt;state);\n        if (old_state != 0) {\n            // \u6709\u8bfb\u8005\u6216\u5199\u8005\uff0c\u9700\u8981\u7b49\u5f85\n            wait_on_queue(&amp;lock-&gt;writers);\n            continue;\n        }\n\n        if (atomic_compare_exchange(&amp;lock-&gt;state, &amp;old_state, 1)) {\n            break;  // \u6210\u529f\u83b7\u53d6\u5199\u9501\n        }\n    }\n}\n</code></pre>"},{"location":"os/lock/lock/#_13","title":"\u5199\u8005\u9965\u997f\u95ee\u9898","text":"<p>\u5728\u8bfb\u64cd\u4f5c\u9891\u7e41\u7684\u573a\u666f\u4e0b\uff0c\u5199\u8005\u53ef\u80fd\u957f\u65f6\u95f4\u65e0\u6cd5\u83b7\u5f97\u9501\u3002\u89e3\u51b3\u65b9\u6848\uff1a</p> C<pre><code>// \u5199\u8005\u4f18\u5148\u7684\u8bfb\u5199\u9501\ntypedef struct {\n    atomic_int readers;\n    atomic_int writers_waiting;\n    mutex_t write_mutex;\n    mutex_t read_mutex;\n} writer_preferred_rwlock_t;\n\nvoid read_lock_writer_preferred(writer_preferred_rwlock_t* lock) {\n    mutex_lock(&amp;lock-&gt;read_mutex);\n    if (atomic_load(&amp;lock-&gt;writers_waiting) &gt; 0) {\n        mutex_unlock(&amp;lock-&gt;read_mutex);\n        mutex_lock(&amp;lock-&gt;write_mutex);  // \u7b49\u5f85\u5199\u8005\u5b8c\u6210\n        mutex_unlock(&amp;lock-&gt;write_mutex);\n        mutex_lock(&amp;lock-&gt;read_mutex);\n    }\n    atomic_fetch_add(&amp;lock-&gt;readers, 1);\n    mutex_unlock(&amp;lock-&gt;read_mutex);\n}\n</code></pre>"},{"location":"os/lock/lock/#34-semaphore","title":"3.4 \u4fe1\u53f7\u91cf\uff08Semaphore\uff09","text":""},{"location":"os/lock/lock/#_14","title":"\u8ba1\u6570\u4fe1\u53f7\u91cf","text":"<p>\u4fe1\u53f7\u91cf\u662f\u4e00\u79cd\u901a\u7528\u7684\u540c\u6b65\u539f\u8bed\uff0c\u7ef4\u62a4\u4e00\u4e2a\u8ba1\u6570\u5668\u3002</p> C<pre><code>typedef struct {\n    atomic_int count;\n    wait_queue_t waiters;\n} semaphore_t;\n\nvoid sem_wait(semaphore_t* sem) {\n    while (atomic_fetch_sub(&amp;sem-&gt;count, 1) &lt;= 0) {\n        atomic_fetch_add(&amp;sem-&gt;count, 1);  // \u56de\u6eda\n        add_to_waitqueue(&amp;sem-&gt;waiters, current_thread);\n        schedule();\n    }\n}\n\nvoid sem_post(semaphore_t* sem) {\n    atomic_fetch_add(&amp;sem-&gt;count, 1);\n    wake_up_one(&amp;sem-&gt;waiters);\n}\n</code></pre>"},{"location":"os/lock/lock/#_15","title":"\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf","text":"<p>\u8ba1\u6570\u4e3a0\u62161\u7684\u7279\u6b8a\u4fe1\u53f7\u91cf\uff0c\u672c\u8d28\u4e0a\u7b49\u540c\u4e8e\u4e92\u65a5\u9501\u3002</p> C<pre><code>// \u521d\u59cb\u5316\u4e3a1\u7684\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\nsemaphore_t binary_sem = { .count = 1 };\n\n// \u76f8\u5f53\u4e8emutex_lock\nsem_wait(&amp;binary_sem);\n\n// \u76f8\u5f53\u4e8emutex_unlock  \nsem_post(&amp;binary_sem);\n</code></pre>"},{"location":"os/lock/lock/#4","title":"4. \u7f16\u7a0b\u8bed\u8a00\u5c42\u9762\uff1a\u9ad8\u7ea7\u9501\u62bd\u8c61","text":"<p>\u7f16\u7a0b\u8bed\u8a00\u5728\u64cd\u4f5c\u7cfb\u7edf\u9501\u7684\u57fa\u7840\u4e0a\uff0c\u63d0\u4f9b\u4e86\u66f4\u6613\u7528\u3001\u66f4\u5b89\u5168\u7684\u9501\u62bd\u8c61\u3002</p>"},{"location":"os/lock/lock/#41-java","title":"4.1 Java\u5e76\u53d1\u5305","text":""},{"location":"os/lock/lock/#synchronized","title":"synchronized\u5173\u952e\u5b57","text":"<p>Java\u6700\u57fa\u7840\u7684\u540c\u6b65\u673a\u5236\uff0c\u63d0\u4f9b\u5185\u7f6e\u7684\u76d1\u89c6\u5668\u9501\u3002</p> Java<pre><code>public class Counter {\n    private int count = 0;\n\n    // \u540c\u6b65\u65b9\u6cd5\n    public synchronized void increment() {\n        count++;\n    }\n\n    // \u540c\u6b65\u4ee3\u7801\u5757\n    public void decrement() {\n        synchronized(this) {\n            count--;\n        }\n    }\n\n    // \u7c7b\u9501\n    public static synchronized void staticMethod() {\n        // \u4f7f\u7528Class\u5bf9\u8c61\u4f5c\u4e3a\u9501\n    }\n}\n</code></pre> <p>synchronized\u7684\u4f18\u5316\uff1a - \u504f\u5411\u9501\uff1a\u65e0\u7ade\u4e89\u65f6\u504f\u5411\u7b2c\u4e00\u4e2a\u83b7\u53d6\u9501\u7684\u7ebf\u7a0b - \u8f7b\u91cf\u7ea7\u9501\uff1a\u4f4e\u7ade\u4e89\u65f6\u4f7f\u7528CAS\u907f\u514d\u91cd\u91cf\u7ea7\u9501 - \u91cd\u91cf\u7ea7\u9501\uff1a\u9ad8\u7ade\u4e89\u65f6\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u4e92\u65a5\u9501</p>"},{"location":"os/lock/lock/#reentrantlock","title":"ReentrantLock","text":"<p>\u63d0\u4f9b\u6bd4synchronized\u66f4\u7075\u6d3b\u7684\u9501\u673a\u5236\u3002</p> Java<pre><code>public class FlexibleCounter {\n    private final ReentrantLock lock = new ReentrantLock();\n    private int count = 0;\n\n    public void increment() {\n        lock.lock();\n        try {\n            count++;\n        } finally {\n            lock.unlock();  // \u5fc5\u987b\u5728finally\u4e2d\u91ca\u653e\n        }\n    }\n\n    public boolean tryIncrement() {\n        if (lock.tryLock()) {\n            try {\n                count++;\n                return true;\n            } finally {\n                lock.unlock();\n            }\n        }\n        return false;\n    }\n\n    public boolean tryIncrementWithTimeout() throws InterruptedException {\n        if (lock.tryLock(1, TimeUnit.SECONDS)) {\n            try {\n                count++;\n                return true;\n            } finally {\n                lock.unlock();\n            }\n        }\n        return false;\n    }\n}\n</code></pre>"},{"location":"os/lock/lock/#readwritelock","title":"ReadWriteLock","text":"<p>\u5141\u8bb8\u591a\u4e2a\u8bfb\u64cd\u4f5c\u5e76\u53d1\u6267\u884c\u3002</p> Java<pre><code>public class CachedData {\n    private final ReadWriteLock lock = new ReentrantReadWriteLock();\n    private final Lock readLock = lock.readLock();\n    private final Lock writeLock = lock.writeLock();\n    private Map&lt;String, String&gt; cache = new HashMap&lt;&gt;();\n\n    public String get(String key) {\n        readLock.lock();\n        try {\n            return cache.get(key);\n        } finally {\n            readLock.unlock();\n        }\n    }\n\n    public void put(String key, String value) {\n        writeLock.lock();\n        try {\n            cache.put(key, value);\n        } finally {\n            writeLock.unlock();\n        }\n    }\n}\n</code></pre>"},{"location":"os/lock/lock/#stampedlock","title":"StampedLock","text":"<p>Java 8\u5f15\u5165\u7684\u9ad8\u6027\u80fd\u9501\uff0c\u652f\u6301\u4e50\u89c2\u8bfb\u3002</p> Java<pre><code>public class OptimisticCounter {\n    private final StampedLock lock = new StampedLock();\n    private int count = 0;\n\n    public int getCount() {\n        long stamp = lock.tryOptimisticRead();\n        int currentCount = count;\n\n        if (!lock.validate(stamp)) {\n            // \u4e50\u89c2\u8bfb\u5931\u8d25\uff0c\u964d\u7ea7\u4e3a\u60b2\u89c2\u8bfb\n            stamp = lock.readLock();\n            try {\n                currentCount = count;\n            } finally {\n                lock.unlockRead(stamp);\n            }\n        }\n        return currentCount;\n    }\n\n    public void increment() {\n        long stamp = lock.writeLock();\n        try {\n            count++;\n        } finally {\n            lock.unlockWrite(stamp);\n        }\n    }\n}\n</code></pre>"},{"location":"os/lock/lock/#42-c","title":"4.2 C++\u5e76\u53d1\u539f\u8bed","text":""},{"location":"os/lock/lock/#stdmutex","title":"std::mutex","text":"<p>C++11\u6807\u51c6\u5e93\u7684\u57fa\u672c\u4e92\u65a5\u9501\u3002</p> C++<pre><code>#include &lt;mutex&gt;\n#include &lt;thread&gt;\n\nclass ThreadSafeCounter {\nprivate:\n    std::mutex mutex_;\n    int count_ = 0;\n\npublic:\n    void increment() {\n        std::lock_guard&lt;std::mutex&gt; lock(mutex_);  // RAII\n        ++count_;\n    }\n\n    void increment_manual() {\n        mutex_.lock();\n        ++count_;\n        mutex_.unlock();  // \u5bb9\u6613\u5fd8\u8bb0\uff0c\u4e0d\u63a8\u8350\n    }\n\n    int get() const {\n        std::lock_guard&lt;std::mutex&gt; lock(mutex_);\n        return count_;\n    }\n};\n</code></pre>"},{"location":"os/lock/lock/#stdshared_mutex","title":"std::shared_mutex","text":"<p>C++17\u7684\u8bfb\u5199\u9501\u3002</p> C++<pre><code>#include &lt;shared_mutex&gt;\n\nclass ThreadSafeMap {\nprivate:\n    mutable std::shared_mutex mutex_;\n    std::unordered_map&lt;int, std::string&gt; map_;\n\npublic:\n    std::string get(int key) const {\n        std::shared_lock&lt;std::shared_mutex&gt; lock(mutex_);\n        auto it = map_.find(key);\n        return it != map_.end() ? it-&gt;second : \"\";\n    }\n\n    void set(int key, const std::string&amp; value) {\n        std::unique_lock&lt;std::shared_mutex&gt; lock(mutex_);\n        map_[key] = value;\n    }\n};\n</code></pre>"},{"location":"os/lock/lock/#stdcondition_variable","title":"std::condition_variable","text":"<p>\u6761\u4ef6\u53d8\u91cf\u7528\u4e8e\u7ebf\u7a0b\u95f4\u901a\u4fe1\u3002</p> C++<pre><code>#include &lt;condition_variable&gt;\n#include &lt;queue&gt;\n\ntemplate&lt;typename T&gt;\nclass ThreadSafeQueue {\nprivate:\n    mutable std::mutex mutex_;\n    std::queue&lt;T&gt; queue_;\n    std::condition_variable condition_;\n\npublic:\n    void push(T item) {\n        std::lock_guard&lt;std::mutex&gt; lock(mutex_);\n        queue_.push(item);\n        condition_.notify_one();\n    }\n\n    T pop() {\n        std::unique_lock&lt;std::mutex&gt; lock(mutex_);\n        condition_.wait(lock, [this] { return !queue_.empty(); });\n        T result = queue_.front();\n        queue_.pop();\n        return result;\n    }\n};\n</code></pre>"},{"location":"os/lock/lock/#43-go","title":"4.3 Go\u8bed\u8a00\u5e76\u53d1","text":""},{"location":"os/lock/lock/#syncmutex","title":"sync.Mutex","text":"<p>Go\u7684\u57fa\u672c\u4e92\u65a5\u9501\u3002</p> Go<pre><code>package main\n\nimport (\n    \"sync\"\n)\n\ntype SafeCounter struct {\n    mu    sync.Mutex\n    count int\n}\n\nfunc (c *SafeCounter) Increment() {\n    c.mu.Lock()\n    defer c.mu.Unlock()  // \u5ef6\u8fdf\u6267\u884c\uff0c\u786e\u4fdd\u89e3\u9501\n    c.count++\n}\n\nfunc (c *SafeCounter) Get() int {\n    c.mu.Lock()\n    defer c.mu.Unlock()\n    return c.count\n}\n</code></pre>"},{"location":"os/lock/lock/#syncrwmutex","title":"sync.RWMutex","text":"<p>Go\u7684\u8bfb\u5199\u9501\u3002</p> Go<pre><code>type SafeMap struct {\n    mu   sync.RWMutex\n    data map[string]int\n}\n\nfunc (m *SafeMap) Get(key string) (int, bool) {\n    m.mu.RLock()\n    defer m.mu.RUnlock()\n    val, ok := m.data[key]\n    return val, ok\n}\n\nfunc (m *SafeMap) Set(key string, value int) {\n    m.mu.Lock()\n    defer m.mu.Unlock()\n    if m.data == nil {\n        m.data = make(map[string]int)\n    }\n    m.data[key] = value\n}\n</code></pre>"},{"location":"os/lock/lock/#channel-vs","title":"channel vs \u9501","text":"<p>Go\u63a8\u8350\u4f7f\u7528channel\u8fdb\u884c\u901a\u4fe1\u800c\u4e0d\u662f\u5171\u4eab\u5185\u5b58\u3002</p> Go<pre><code>// \u4f7f\u7528\u9501\u7684\u65b9\u5f0f\ntype Counter struct {\n    mu    sync.Mutex\n    count int\n}\n\n// \u4f7f\u7528channel\u7684\u65b9\u5f0f\ntype ChannelCounter struct {\n    ch chan int\n}\n\nfunc NewChannelCounter() *ChannelCounter {\n    c := &amp;ChannelCounter{ch: make(chan int, 1)}\n    c.ch &lt;- 0  // \u521d\u59cb\u503c\n    return c\n}\n\nfunc (c *ChannelCounter) Increment() {\n    count := &lt;-c.ch\n    c.ch &lt;- count + 1\n}\n\nfunc (c *ChannelCounter) Get() int {\n    count := &lt;-c.ch\n    c.ch &lt;- count  // \u653e\u56de\u53bb\n    return count\n}\n</code></pre>"},{"location":"os/lock/lock/#5","title":"5. \u5206\u5e03\u5f0f\u9501","text":"<p>\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u9700\u8981\u8de8\u591a\u4e2a\u8282\u70b9\u534f\u8c03\u5bf9\u5171\u4eab\u8d44\u6e90\u7684\u8bbf\u95ee\u3002</p>"},{"location":"os/lock/lock/#51","title":"5.1 \u5206\u5e03\u5f0f\u9501\u7684\u6311\u6218","text":""},{"location":"os/lock/lock/#_16","title":"\u7f51\u7edc\u5206\u533a","text":"<p>\u5f53\u7f51\u7edc\u5206\u533a\u53d1\u751f\u65f6\uff0c\u4e0d\u540c\u5206\u533a\u53ef\u80fd\u540c\u65f6\u8ba4\u4e3a\u81ea\u5df1\u83b7\u5f97\u4e86\u9501\u3002</p> Text Only<pre><code>\u8282\u70b9A \u2190--X--\u2192 \u8282\u70b9B\n  |            |\n  \u2193            \u2193  \n\u8ba4\u4e3a\u83b7\u5f97\u9501    \u8ba4\u4e3a\u83b7\u5f97\u9501\n</code></pre>"},{"location":"os/lock/lock/#_17","title":"\u8282\u70b9\u6545\u969c","text":"<p>\u6301\u6709\u9501\u7684\u8282\u70b9\u5d29\u6e83\u540e\uff0c\u9700\u8981\u673a\u5236\u91ca\u653e\u9501\u3002</p>"},{"location":"os/lock/lock/#_18","title":"\u65f6\u949f\u504f\u79fb","text":"<p>\u4e0d\u540c\u8282\u70b9\u7684\u65f6\u949f\u53ef\u80fd\u4e0d\u540c\u6b65\uff0c\u5f71\u54cd\u57fa\u4e8e\u65f6\u95f4\u7684\u9501\u673a\u5236\u3002</p>"},{"location":"os/lock/lock/#52","title":"5.2 \u57fa\u4e8e\u6570\u636e\u5e93\u7684\u5206\u5e03\u5f0f\u9501","text":""},{"location":"os/lock/lock/#_19","title":"\u60b2\u89c2\u9501\u5b9e\u73b0","text":"<p>\u4f7f\u7528\u6570\u636e\u5e93\u7684\u884c\u7ea7\u9501\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u3002</p> SQL<pre><code>-- \u521b\u5efa\u9501\u8868\nCREATE TABLE distributed_locks (\n    lock_name VARCHAR(255) PRIMARY KEY,\n    holder VARCHAR(255) NOT NULL,\n    acquired_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- \u83b7\u53d6\u9501\nBEGIN TRANSACTION;\nINSERT INTO distributed_locks (lock_name, holder) \nVALUES ('resource_1', 'node_1');\n-- \u5982\u679c\u63d2\u5165\u6210\u529f\uff0c\u5219\u83b7\u5f97\u9501\nCOMMIT;\n\n-- \u91ca\u653e\u9501\nDELETE FROM distributed_locks \nWHERE lock_name = 'resource_1' AND holder = 'node_1';\n</code></pre>"},{"location":"os/lock/lock/#_20","title":"\u4e50\u89c2\u9501\u5b9e\u73b0","text":"<p>\u4f7f\u7528\u7248\u672c\u53f7\u5b9e\u73b0\u4e50\u89c2\u9501\u3002</p> SQL<pre><code>-- \u5e26\u7248\u672c\u53f7\u7684\u8d44\u6e90\u8868\nCREATE TABLE resources (\n    id INT PRIMARY KEY,\n    data TEXT,\n    version INT DEFAULT 0,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- \u4e50\u89c2\u9501\u66f4\u65b0\nUPDATE resources \nSET data = 'new_value', version = version + 1 \nWHERE id = 1 AND version = 5;  -- \u53ea\u6709\u7248\u672c\u53f7\u5339\u914d\u624d\u66f4\u65b0\n</code></pre>"},{"location":"os/lock/lock/#_21","title":"\u6b7b\u9501\u68c0\u6d4b","text":"<p>\u6570\u636e\u5e93\u5929\u7136\u652f\u6301\u6b7b\u9501\u68c0\u6d4b\u548c\u81ea\u52a8\u56de\u6eda\u3002</p>"},{"location":"os/lock/lock/#53-redis","title":"5.3 \u57fa\u4e8eRedis\u7684\u5206\u5e03\u5f0f\u9501","text":""},{"location":"os/lock/lock/#redis","title":"\u5355\u8282\u70b9Redis\u9501","text":"<p>\u4f7f\u7528Redis\u7684SET\u547d\u4ee4\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u3002</p> Python<pre><code>import redis\nimport time\nimport uuid\n\nclass RedisLock:\n    def __init__(self, redis_client, key, timeout=10):\n        self.redis = redis_client\n        self.key = key\n        self.timeout = timeout\n        self.identifier = str(uuid.uuid4())\n\n    def acquire(self):\n        # \u4f7f\u7528SET\u547d\u4ee4\u7684NX\u548cEX\u9009\u9879\n        result = self.redis.set(\n            self.key, \n            self.identifier, \n            nx=True,  # \u53ea\u5728\u952e\u4e0d\u5b58\u5728\u65f6\u8bbe\u7f6e\n            ex=self.timeout  # \u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\n        )\n        return result is not None\n\n    def release(self):\n        # \u4f7f\u7528Lua\u811a\u672c\u786e\u4fdd\u539f\u5b50\u6027\n        lua_script = \"\"\"\n        if redis.call(\"GET\", KEYS[1]) == ARGV[1] then\n            return redis.call(\"DEL\", KEYS[1])\n        else\n            return 0\n        end\n        \"\"\"\n        return self.redis.eval(lua_script, 1, self.key, self.identifier)\n\n# \u4f7f\u7528\u793a\u4f8b\nredis_client = redis.Redis(host='localhost', port=6379, db=0)\nlock = RedisLock(redis_client, \"my_resource\")\n\nif lock.acquire():\n    try:\n        # \u6267\u884c\u4e34\u754c\u533a\u4ee3\u7801\n        print(\"\u83b7\u5f97\u9501\uff0c\u6267\u884c\u4e1a\u52a1\u903b\u8f91\")\n        time.sleep(5)\n    finally:\n        lock.release()\nelse:\n    print(\"\u65e0\u6cd5\u83b7\u5f97\u9501\")\n</code></pre>"},{"location":"os/lock/lock/#redlock","title":"Redlock\u7b97\u6cd5","text":"<p>\u4e3a\u4e86\u89e3\u51b3\u5355\u70b9\u6545\u969c\uff0cRedis\u4f5c\u8005\u63d0\u51fa\u4e86Redlock\u7b97\u6cd5\u3002</p> Python<pre><code>import time\nimport random\n\nclass Redlock:\n    def __init__(self, redis_instances):\n        self.redis_instances = redis_instances\n        self.quorum = len(redis_instances) // 2 + 1\n\n    def acquire(self, resource, ttl):\n        identifier = str(uuid.uuid4())\n        start_time = time.time()\n\n        # \u5c1d\u8bd5\u5728\u5927\u591a\u6570\u5b9e\u4f8b\u4e0a\u83b7\u53d6\u9501\n        acquired = 0\n        for redis in self.redis_instances:\n            try:\n                if redis.set(resource, identifier, nx=True, px=ttl):\n                    acquired += 1\n            except:\n                pass  # \u5ffd\u7565\u7f51\u7edc\u9519\u8bef\n\n        # \u68c0\u67e5\u662f\u5426\u83b7\u5f97\u4e86\u5927\u591a\u6570\u9501\n        elapsed = (time.time() - start_time) * 1000\n        if acquired &gt;= self.quorum and elapsed &lt; ttl:\n            return True, identifier\n        else:\n            # \u91ca\u653e\u5df2\u83b7\u5f97\u7684\u9501\n            self.release(resource, identifier)\n            return False, None\n\n    def release(self, resource, identifier):\n        lua_script = \"\"\"\n        if redis.call(\"GET\", KEYS[1]) == ARGV[1] then\n            return redis.call(\"DEL\", KEYS[1])\n        else\n            return 0\n        end\n        \"\"\"\n        for redis in self.redis_instances:\n            try:\n                redis.eval(lua_script, 1, resource, identifier)\n            except:\n                pass  # \u5ffd\u7565\u7f51\u7edc\u9519\u8bef\n</code></pre>"},{"location":"os/lock/lock/#_22","title":"\u95ee\u9898\u4e0e\u9650\u5236","text":"<ul> <li>\u65f6\u949f\u504f\u79fb\uff1a\u8282\u70b9\u65f6\u949f\u4e0d\u540c\u6b65\u53ef\u80fd\u5bfc\u81f4\u9501\u8fc7\u671f\u65f6\u95f4\u4e0d\u4e00\u81f4</li> <li>\u7f51\u7edc\u5ef6\u8fdf\uff1a\u53ef\u80fd\u5bfc\u81f4\u9501\u5728\u9884\u671f\u65f6\u95f4\u4e4b\u524d\u6216\u4e4b\u540e\u8fc7\u671f</li> <li>GC\u505c\u987f\uff1a\u957f\u65f6\u95f4GC\u53ef\u80fd\u5bfc\u81f4\u9501\u610f\u5916\u8fc7\u671f</li> </ul>"},{"location":"os/lock/lock/#54-zookeeper","title":"5.4 \u57fa\u4e8eZooKeeper\u7684\u5206\u5e03\u5f0f\u9501","text":""},{"location":"os/lock/lock/#_23","title":"\u4e34\u65f6\u987a\u5e8f\u8282\u70b9","text":"<p>ZooKeeper\u901a\u8fc7\u4e34\u65f6\u987a\u5e8f\u8282\u70b9\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u3002</p> Python<pre><code>from kazoo.client import KazooClient\nfrom kazoo.recipe.lock import Lock\n\nclass ZooKeeperLock:\n    def __init__(self, hosts, path):\n        self.zk = KazooClient(hosts=hosts)\n        self.zk.start()\n        self.lock = Lock(self.zk, path)\n\n    def acquire(self, timeout=None):\n        return self.lock.acquire(timeout=timeout)\n\n    def release(self):\n        self.lock.release()\n\n    def __enter__(self):\n        self.acquire()\n        return self\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        self.release()\n\n# \u4f7f\u7528\u793a\u4f8b\nwith ZooKeeperLock(\"localhost:2181\", \"/my_lock\") as lock:\n    print(\"\u83b7\u5f97\u9501\uff0c\u6267\u884c\u4e1a\u52a1\u903b\u8f91\")\n    time.sleep(5)\n</code></pre>"},{"location":"os/lock/lock/#_24","title":"\u7f8a\u7fa4\u6548\u5e94\u4f18\u5316","text":"<p>\u5f53\u9501\u91ca\u653e\u65f6\uff0c\u907f\u514d\u5524\u9192\u6240\u6709\u7b49\u5f85\u7684\u5ba2\u6237\u7aef\u3002</p> Python<pre><code># ZooKeeper\u9501\u7684\u5185\u90e8\u5b9e\u73b0\u539f\u7406\ndef acquire_lock(zk, lock_path):\n    # 1. \u521b\u5efa\u4e34\u65f6\u987a\u5e8f\u8282\u70b9\n    my_node = zk.create(lock_path + \"/lock-\", \n                       value=b\"\", \n                       ephemeral=True, \n                       sequence=True)\n\n    while True:\n        # 2. \u83b7\u53d6\u6240\u6709\u5b50\u8282\u70b9\u5e76\u6392\u5e8f\n        children = sorted(zk.get_children(lock_path))\n        my_index = children.index(my_node.split('/')[-1])\n\n        # 3. \u5982\u679c\u662f\u6700\u5c0f\u8282\u70b9\uff0c\u83b7\u5f97\u9501\n        if my_index == 0:\n            return True\n\n        # 4. \u5426\u5219\u76d1\u542c\u524d\u4e00\u4e2a\u8282\u70b9\n        prev_node = children[my_index - 1]\n        prev_path = f\"{lock_path}/{prev_node}\"\n\n        if zk.exists(prev_path, watch=lambda event: None):\n            # \u7b49\u5f85\u524d\u4e00\u4e2a\u8282\u70b9\u5220\u9664\n            pass\n        else:\n            # \u524d\u4e00\u4e2a\u8282\u70b9\u5df2\u7ecf\u4e0d\u5b58\u5728\uff0c\u91cd\u65b0\u68c0\u67e5\n            continue\n</code></pre>"},{"location":"os/lock/lock/#55-etcd","title":"5.5 \u57fa\u4e8eetcd\u7684\u5206\u5e03\u5f0f\u9501","text":""},{"location":"os/lock/lock/#lease","title":"Lease\u673a\u5236","text":"<p>etcd\u4f7f\u7528\u79df\u7ea6\u673a\u5236\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u3002</p> Python<pre><code>import etcd3\n\nclass EtcdLock:\n    def __init__(self, host='localhost', port=2379):\n        self.etcd = etcd3.client(host=host, port=port)\n        self.lease = None\n\n    def acquire(self, key, ttl=30):\n        # \u521b\u5efa\u79df\u7ea6\n        self.lease = self.etcd.lease(ttl)\n\n        # \u5c1d\u8bd5\u83b7\u53d6\u9501\n        success = self.etcd.transaction(\n            compare=[\n                self.etcd.transactions.create(key) == 0  # \u952e\u4e0d\u5b58\u5728\n            ],\n            success=[\n                self.etcd.transactions.put(key, \"locked\", lease=self.lease)\n            ],\n            failure=[]\n        )\n\n        if success:\n            # \u542f\u52a8\u79df\u7ea6\u7eed\u671f\n            self.lease.refresh_interval = ttl // 3\n            return True\n        else:\n            self.lease.revoke()\n            return False\n\n    def release(self, key):\n        if self.lease:\n            self.lease.revoke()  # \u64a4\u9500\u79df\u7ea6\u4f1a\u81ea\u52a8\u5220\u9664\u952e\n            self.lease = None\n\n# \u4f7f\u7528\u793a\u4f8b\nlock = EtcdLock()\nif lock.acquire(\"my_resource\", ttl=30):\n    try:\n        print(\"\u83b7\u5f97\u9501\uff0c\u6267\u884c\u4e1a\u52a1\u903b\u8f91\")\n        time.sleep(10)\n    finally:\n        lock.release(\"my_resource\")\n</code></pre>"},{"location":"os/lock/lock/#watch","title":"Watch\u673a\u5236","text":"<p>etcd\u7684Watch\u673a\u5236\u53ef\u4ee5\u9ad8\u6548\u5730\u76d1\u542c\u952e\u7684\u53d8\u5316\u3002</p> Python<pre><code>def wait_for_lock(etcd_client, key):\n    # \u76d1\u542c\u952e\u7684\u5220\u9664\u4e8b\u4ef6\n    events_iterator, cancel = etcd_client.watch(key)\n\n    try:\n        for event in events_iterator:\n            if isinstance(event, etcd3.events.DeleteEvent):\n                # \u9501\u88ab\u91ca\u653e\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u83b7\u53d6\n                break\n    finally:\n        cancel()\n</code></pre>"},{"location":"os/lock/lock/#6","title":"6. \u9501\u7684\u6027\u80fd\u4e0e\u4f18\u5316","text":""},{"location":"os/lock/lock/#61","title":"6.1 \u9501\u7ade\u4e89\u4e0e\u6027\u80fd","text":""},{"location":"os/lock/lock/#_25","title":"\u9501\u7c92\u5ea6\u8bbe\u8ba1","text":"<p>\u9009\u62e9\u5408\u9002\u7684\u9501\u7c92\u5ea6\u662f\u6027\u80fd\u4f18\u5316\u7684\u5173\u952e\u3002</p> Java<pre><code>// \u7c97\u7c92\u5ea6\u9501 - \u7b80\u5355\u4f46\u6027\u80fd\u5dee\npublic class CoarseGrainedCounter {\n    private final Object lock = new Object();\n    private long count1 = 0;\n    private long count2 = 0;\n\n    public void increment1() {\n        synchronized(lock) {\n            count1++;\n        }\n    }\n\n    public void increment2() {\n        synchronized(lock) {  // \u4e0d\u5fc5\u8981\u7684\u7ade\u4e89\n            count2++;\n        }\n    }\n}\n\n// \u7ec6\u7c92\u5ea6\u9501 - \u590d\u6742\u4f46\u6027\u80fd\u597d\npublic class FineGrainedCounter {\n    private final Object lock1 = new Object();\n    private final Object lock2 = new Object();\n    private long count1 = 0;\n    private long count2 = 0;\n\n    public void increment1() {\n        synchronized(lock1) {\n            count1++;\n        }\n    }\n\n    public void increment2() {\n        synchronized(lock2) {  // \u72ec\u7acb\u7684\u9501\n            count2++;\n        }\n    }\n}\n</code></pre>"},{"location":"os/lock/lock/#_26","title":"\u9501\u5206\u79bb\u6280\u672f","text":"<p>\u5c06\u8bfb\u5199\u64cd\u4f5c\u5206\u79bb\uff0c\u63d0\u9ad8\u5e76\u53d1\u6027\u3002</p> Java<pre><code>// \u8bfb\u5199\u5206\u79bb\u7684\u7f13\u5b58\u5b9e\u73b0\npublic class SeparatedCache&lt;K, V&gt; {\n    private final ConcurrentHashMap&lt;K, V&gt; cache = new ConcurrentHashMap&lt;&gt;();\n    private final ReadWriteLock lock = new ReentrantReadWriteLock();\n\n    public V get(String key) {\n        // \u4e50\u89c2\u8bfb\uff0c\u65e0\u9501\n        return cache.get(key);\n    }\n\n    public void put(K key, V value) {\n        lock.writeLock().lock();\n        try {\n            cache.put(key, value);\n            // \u53ef\u80fd\u9700\u8981\u6e05\u7406\u8fc7\u671f\u6570\u636e\n        } finally {\n            lock.writeLock().unlock();\n        }\n    }\n}\n</code></pre>"},{"location":"os/lock/lock/#_27","title":"\u65e0\u9501\u7f16\u7a0b","text":"<p>\u4f7f\u7528\u539f\u5b50\u64cd\u4f5c\u548cCAS\u907f\u514d\u9501\u7684\u5f00\u9500\u3002</p> Java<pre><code>// \u65e0\u9501\u6808\u5b9e\u73b0\npublic class LockFreeStack&lt;T&gt; {\n    private final AtomicReference&lt;Node&lt;T&gt;&gt; head = new AtomicReference&lt;&gt;();\n\n    private static class Node&lt;T&gt; {\n        final T data;\n        final Node&lt;T&gt; next;\n\n        Node(T data, Node&lt;T&gt; next) {\n            this.data = data;\n            this.next = next;\n        }\n    }\n\n    public void push(T data) {\n        Node&lt;T&gt; newNode = new Node&lt;&gt;(data, null);\n        Node&lt;T&gt; currentHead;\n        do {\n            currentHead = head.get();\n            newNode.next = currentHead;\n        } while (!head.compareAndSet(currentHead, newNode));\n    }\n\n    public T pop() {\n        Node&lt;T&gt; currentHead;\n        Node&lt;T&gt; newHead;\n        do {\n            currentHead = head.get();\n            if (currentHead == null) {\n                return null;\n            }\n            newHead = currentHead.next;\n        } while (!head.compareAndSet(currentHead, newHead));\n\n        return currentHead.data;\n    }\n}\n</code></pre>"},{"location":"os/lock/lock/#62","title":"6.2 \u5e38\u89c1\u95ee\u9898","text":""},{"location":"os/lock/lock/#_28","title":"\u6b7b\u9501\u68c0\u6d4b\u4e0e\u9884\u9632","text":"<p>\u6b7b\u9501\u662f\u591a\u4e2a\u7ebf\u7a0b\u76f8\u4e92\u7b49\u5f85\u5bf9\u65b9\u91ca\u653e\u8d44\u6e90\u7684\u60c5\u51b5\u3002</p> Java<pre><code>// \u6b7b\u9501\u793a\u4f8b\npublic class DeadlockExample {\n    private final Object lock1 = new Object();\n    private final Object lock2 = new Object();\n\n    public void method1() {\n        synchronized(lock1) {\n            synchronized(lock2) {  // \u83b7\u53d6\u9501\u7684\u987a\u5e8f\uff1alock1 -&gt; lock2\n                // \u4e1a\u52a1\u903b\u8f91\n            }\n        }\n    }\n\n    public void method2() {\n        synchronized(lock2) {\n            synchronized(lock1) {  // \u83b7\u53d6\u9501\u7684\u987a\u5e8f\uff1alock2 -&gt; lock1\uff0c\u53ef\u80fd\u6b7b\u9501\n                // \u4e1a\u52a1\u903b\u8f91\n            }\n        }\n    }\n}\n\n// \u6b7b\u9501\u9884\u9632 - \u6309\u987a\u5e8f\u83b7\u53d6\u9501\npublic class DeadlockPrevention {\n    private final Object lock1 = new Object();\n    private final Object lock2 = new Object();\n\n    private void acquireLocksInOrder(Object first, Object second, Runnable action) {\n        synchronized(first) {\n            synchronized(second) {\n                action.run();\n            }\n        }\n    }\n\n    public void method1() {\n        acquireLocksInOrder(lock1, lock2, () -&gt; {\n            // \u4e1a\u52a1\u903b\u8f91\n        });\n    }\n\n    public void method2() {\n        acquireLocksInOrder(lock1, lock2, () -&gt; {  // \u76f8\u540c\u7684\u9501\u987a\u5e8f\n            // \u4e1a\u52a1\u903b\u8f91\n        });\n    }\n}\n</code></pre>"},{"location":"os/lock/lock/#_29","title":"\u6d3b\u9501\u95ee\u9898","text":"<p>\u7ebf\u7a0b\u867d\u7136\u6ca1\u6709\u88ab\u963b\u585e\uff0c\u4f46\u7531\u4e8e\u54cd\u5e94\u5bf9\u65b9\u800c\u65e0\u6cd5\u53d6\u5f97\u8fdb\u5c55\u3002</p> Java<pre><code>// \u6d3b\u9501\u793a\u4f8b\u548c\u89e3\u51b3\u65b9\u6848\npublic class LivelockExample {\n    public void transfer(Account from, Account to, int amount) {\n        while (true) {\n            if (from.lock.tryLock()) {\n                try {\n                    if (to.lock.tryLock()) {\n                        try {\n                            // \u6267\u884c\u8f6c\u8d26\n                            from.balance -= amount;\n                            to.balance += amount;\n                            return;\n                        } finally {\n                            to.lock.unlock();\n                        }\n                    }\n                } finally {\n                    from.lock.unlock();\n                }\n            }\n\n            // \u968f\u673a\u9000\u907f\uff0c\u907f\u514d\u6d3b\u9501\n            Thread.sleep(random.nextInt(10));\n        }\n    }\n}\n</code></pre>"},{"location":"os/lock/lock/#_30","title":"\u4f18\u5148\u7ea7\u53cd\u8f6c","text":"<p>\u4f4e\u4f18\u5148\u7ea7\u7ebf\u7a0b\u6301\u6709\u9501\uff0c\u9ad8\u4f18\u5148\u7ea7\u7ebf\u7a0b\u88ab\u8feb\u7b49\u5f85\u3002</p> Java<pre><code>// \u4f18\u5148\u7ea7\u7ee7\u627f\u89e3\u51b3\u65b9\u6848\uff08\u6982\u5ff5\u6027\u4ee3\u7801\uff09\npublic class PriorityInheritanceMutex {\n    private volatile Thread owner;\n    private volatile int originalPriority;\n\n    public void lock() {\n        Thread current = Thread.currentThread();\n\n        while (!tryAcquire()) {\n            if (owner != null &amp;&amp; owner.getPriority() &lt; current.getPriority()) {\n                // \u4e34\u65f6\u63d0\u5347\u9501\u6301\u6709\u8005\u7684\u4f18\u5148\u7ea7\n                originalPriority = owner.getPriority();\n                owner.setPriority(current.getPriority());\n            }\n            // \u7b49\u5f85\u903b\u8f91...\n        }\n    }\n\n    public void unlock() {\n        if (originalPriority != -1) {\n            // \u6062\u590d\u539f\u59cb\u4f18\u5148\u7ea7\n            Thread.currentThread().setPriority(originalPriority);\n        }\n        owner = null;\n        // \u91ca\u653e\u9501...\n    }\n}\n</code></pre>"},{"location":"os/lock/lock/#63","title":"6.3 \u6027\u80fd\u6d4b\u8bd5\u4e0e\u8c03\u4f18","text":""},{"location":"os/lock/lock/#_31","title":"\u9501\u7ade\u4e89\u5206\u6790\u5de5\u5177","text":"Bash<pre><code># Java\u6027\u80fd\u5206\u6790\n# 1. JVM\u5185\u7f6e\u5de5\u5177\njstack &lt;pid&gt;  # \u7ebf\u7a0b\u5806\u6808\u5206\u6790\njstat -gc &lt;pid&gt;  # GC\u5206\u6790\n\n# 2. \u4e13\u4e1a\u5de5\u5177\n# JProfiler, YourKit, VisualVM\n\n# 3. \u9501\u7ade\u4e89\u76d1\u63a7\njava -XX:+PrintGCDetails -XX:+PrintGCTimeStamps \\\n     -XX:+PrintConcurrentLocks YourApplication\n</code></pre>"},{"location":"os/lock/lock/#_32","title":"\u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5","text":"Java<pre><code>// JMH\u57fa\u51c6\u6d4b\u8bd5\u793a\u4f8b\n@BenchmarkMode(Mode.Throughput)\n@OutputTimeUnit(TimeUnit.SECONDS)\n@State(Scope.Benchmark)\npublic class LockBenchmark {\n\n    private final Object synchronizedLock = new Object();\n    private final ReentrantLock reentrantLock = new ReentrantLock();\n    private final AtomicInteger atomicCounter = new AtomicInteger();\n    private int counter = 0;\n\n    @Benchmark\n    public void synchronizedIncrement() {\n        synchronized(synchronizedLock) {\n            counter++;\n        }\n    }\n\n    @Benchmark\n    public void reentrantLockIncrement() {\n        reentrantLock.lock();\n        try {\n            counter++;\n        } finally {\n            reentrantLock.unlock();\n        }\n    }\n\n    @Benchmark\n    public void atomicIncrement() {\n        atomicCounter.incrementAndGet();\n    }\n}\n</code></pre>"},{"location":"os/lock/lock/#7","title":"7. \u5b9e\u8df5\u6848\u4f8b","text":""},{"location":"os/lock/lock/#71","title":"7.1 \u9ad8\u5e76\u53d1\u573a\u666f\u4e0b\u7684\u9501\u9009\u62e9","text":""},{"location":"os/lock/lock/#_33","title":"\u7535\u5546\u79d2\u6740\u7cfb\u7edf","text":"Java<pre><code>public class SeckillService {\n    private final RedisTemplate&lt;String, String&gt; redis;\n    private final String STOCK_KEY = \"product:stock:\";\n\n    public boolean seckill(String productId, String userId) {\n        String lockKey = \"seckill:lock:\" + productId;\n        String lockValue = UUID.randomUUID().toString();\n\n        // \u4f7f\u7528Redis\u5206\u5e03\u5f0f\u9501\n        boolean lockAcquired = redis.opsForValue().setIfAbsent(\n            lockKey, lockValue, Duration.ofSeconds(10)\n        );\n\n        if (!lockAcquired) {\n            return false;  // \u83b7\u53d6\u9501\u5931\u8d25\n        }\n\n        try {\n            // \u68c0\u67e5\u5e93\u5b58\n            String stockStr = redis.opsForValue().get(STOCK_KEY + productId);\n            int stock = Integer.parseInt(stockStr);\n\n            if (stock &gt; 0) {\n                // \u51cf\u5e93\u5b58\n                redis.opsForValue().decrement(STOCK_KEY + productId);\n                // \u521b\u5efa\u8ba2\u5355\n                createOrder(productId, userId);\n                return true;\n            }\n            return false;\n        } finally {\n            // \u4f7f\u7528Lua\u811a\u672c\u786e\u4fdd\u53ea\u91ca\u653e\u81ea\u5df1\u7684\u9501\n            String script = \"\"\"\n                if redis.call('get', KEYS[1]) == ARGV[1] then\n                    return redis.call('del', KEYS[1])\n                else\n                    return 0\n                end\n                \"\"\";\n            redis.execute(RedisScript.of(script, Long.class), \n                         Collections.singletonList(lockKey), lockValue);\n        }\n    }\n}\n</code></pre>"},{"location":"os/lock/lock/#_34","title":"\u7f13\u5b58\u66f4\u65b0\u7b56\u7565","text":"Java<pre><code>public class CacheService {\n    private final Cache&lt;String, Object&gt; localCache;\n    private final RedisTemplate&lt;String, Object&gt; redisCache;\n    private final ReadWriteLock lock = new ReentrantReadWriteLock();\n\n    public Object get(String key) {\n        // \u5148\u67e5\u672c\u5730\u7f13\u5b58\n        Object value = localCache.getIfPresent(key);\n        if (value != null) {\n            return value;\n        }\n\n        // \u518d\u67e5Redis\u7f13\u5b58\n        lock.readLock().lock();\n        try {\n            value = redisCache.opsForValue().get(key);\n            if (value != null) {\n                localCache.put(key, value);\n            }\n            return value;\n        } finally {\n            lock.readLock().unlock();\n        }\n    }\n\n    public void update(String key, Object value) {\n        lock.writeLock().lock();\n        try {\n            // \u66f4\u65b0\u6570\u636e\u5e93\n            updateDatabase(key, value);\n\n            // \u5220\u9664\u7f13\u5b58\uff0c\u800c\u4e0d\u662f\u66f4\u65b0\u7f13\u5b58\n            localCache.invalidate(key);\n            redisCache.delete(key);\n        } finally {\n            lock.writeLock().unlock();\n        }\n    }\n}\n</code></pre>"},{"location":"os/lock/lock/#72","title":"7.2 \u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7684\u4e00\u81f4\u6027\u4fdd\u8bc1","text":""},{"location":"os/lock/lock/#_35","title":"\u5206\u5e03\u5f0f\u4e8b\u52a1\u9501","text":"Java<pre><code>@Service\npublic class DistributedTransactionService {\n\n    @Transactional\n    @DistributedLock(key = \"#accountId\", waitTime = 5000)\n    public void transfer(String fromAccountId, String toAccountId, BigDecimal amount) {\n        // \u5206\u5e03\u5f0f\u9501\u786e\u4fdd\u540c\u4e00\u8d26\u6237\u4e0d\u4f1a\u5e76\u53d1\u8f6c\u8d26\n        Account fromAccount = accountService.getById(fromAccountId);\n        Account toAccount = accountService.getById(toAccountId);\n\n        if (fromAccount.getBalance().compareTo(amount) &lt; 0) {\n            throw new InsufficientBalanceException();\n        }\n\n        fromAccount.setBalance(fromAccount.getBalance().subtract(amount));\n        toAccount.setBalance(toAccount.getBalance().add(amount));\n\n        accountService.updateById(fromAccount);\n        accountService.updateById(toAccount);\n\n        // \u8bb0\u5f55\u8f6c\u8d26\u65e5\u5fd7\n        transactionLogService.recordTransfer(fromAccountId, toAccountId, amount);\n    }\n}\n</code></pre>"},{"location":"os/lock/lock/#_36","title":"\u5206\u5e03\u5f0f\u9501\u6ce8\u89e3\u5b9e\u73b0","text":"Java<pre><code>@Component\n@Aspect\npublic class DistributedLockAspect {\n\n    @Autowired\n    private RedissonClient redissonClient;\n\n    @Around(\"@annotation(distributedLock)\")\n    public Object around(ProceedingJoinPoint joinPoint, DistributedLock distributedLock) throws Throwable {\n        String lockKey = parseKey(distributedLock.key(), joinPoint);\n        RLock lock = redissonClient.getLock(lockKey);\n\n        boolean acquired = false;\n        try {\n            acquired = lock.tryLock(distributedLock.waitTime(), \n                                   distributedLock.leaseTime(), \n                                   TimeUnit.MILLISECONDS);\n\n            if (!acquired) {\n                throw new LockAcquisitionException(\"\u65e0\u6cd5\u83b7\u53d6\u5206\u5e03\u5f0f\u9501: \" + lockKey);\n            }\n\n            return joinPoint.proceed();\n        } finally {\n            if (acquired) {\n                lock.unlock();\n            }\n        }\n    }\n\n    private String parseKey(String keyExpression, ProceedingJoinPoint joinPoint) {\n        // \u4f7f\u7528SpEL\u89e3\u6790\u952e\u8868\u8fbe\u5f0f\n        StandardEvaluationContext context = new StandardEvaluationContext();\n        MethodSignature signature = (MethodSignature) joinPoint.getSignature();\n        String[] paramNames = signature.getParameterNames();\n        Object[] args = joinPoint.getArgs();\n\n        for (int i = 0; i &lt; paramNames.length; i++) {\n            context.setVariable(paramNames[i], args[i]);\n        }\n\n        ExpressionParser parser = new SpelExpressionParser();\n        return parser.parseExpression(keyExpression).getValue(context, String.class);\n    }\n}\n</code></pre>"},{"location":"os/lock/lock/#73","title":"7.3 \u5fae\u670d\u52a1\u67b6\u6784\u4e2d\u7684\u9501\u7b56\u7565","text":""},{"location":"os/lock/lock/#_37","title":"\u670d\u52a1\u7ea7\u9501\u534f\u8c03","text":"Java<pre><code>@RestController\npublic class OrderController {\n\n    @Autowired\n    private LockCoordinator lockCoordinator;\n\n    @PostMapping(\"/orders\")\n    public ResponseEntity&lt;Order&gt; createOrder(@RequestBody CreateOrderRequest request) {\n        List&lt;String&gt; lockKeys = Arrays.asList(\n            \"inventory:\" + request.getProductId(),\n            \"user:\" + request.getUserId(),\n            \"coupon:\" + request.getCouponId()\n        );\n\n        // \u6309\u5b57\u5178\u5e8f\u83b7\u53d6\u9501\uff0c\u907f\u514d\u6b7b\u9501\n        Collections.sort(lockKeys);\n\n        return lockCoordinator.executeWithLocks(lockKeys, () -&gt; {\n            // \u68c0\u67e5\u5e93\u5b58\n            if (!inventoryService.checkStock(request.getProductId(), request.getQuantity())) {\n                throw new InsufficientStockException();\n            }\n\n            // \u68c0\u67e5\u7528\u6237\u72b6\u6001\n            if (!userService.isUserValid(request.getUserId())) {\n                throw new InvalidUserException();\n            }\n\n            // \u68c0\u67e5\u4f18\u60e0\u5238\n            if (!couponService.isValidCoupon(request.getCouponId(), request.getUserId())) {\n                throw new InvalidCouponException();\n            }\n\n            // \u521b\u5efa\u8ba2\u5355\n            Order order = orderService.createOrder(request);\n\n            // \u6263\u51cf\u5e93\u5b58\n            inventoryService.deductStock(request.getProductId(), request.getQuantity());\n\n            // \u4f7f\u7528\u4f18\u60e0\u5238\n            couponService.useCoupon(request.getCouponId(), request.getUserId());\n\n            return ResponseEntity.ok(order);\n        });\n    }\n}\n\n@Component\npublic class LockCoordinator {\n\n    @Autowired\n    private RedissonClient redissonClient;\n\n    public &lt;T&gt; T executeWithLocks(List&lt;String&gt; lockKeys, Supplier&lt;T&gt; action) {\n        List&lt;RLock&gt; locks = lockKeys.stream()\n            .map(redissonClient::getLock)\n            .collect(Collectors.toList());\n\n        RLock multiLock = redissonClient.getMultiLock(locks.toArray(new RLock[0]));\n\n        try {\n            if (multiLock.tryLock(5, 30, TimeUnit.SECONDS)) {\n                return action.get();\n            } else {\n                throw new LockAcquisitionException(\"\u65e0\u6cd5\u83b7\u53d6\u6240\u9700\u7684\u6240\u6709\u9501\");\n            }\n        } catch (InterruptedException e) {\n            Thread.currentThread().interrupt();\n            throw new RuntimeException(\"\u9501\u83b7\u53d6\u88ab\u4e2d\u65ad\", e);\n        } finally {\n            if (multiLock.isHeldByCurrentThread()) {\n                multiLock.unlock();\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"os/lock/lock/#8","title":"8. \u603b\u7ed3\u4e0e\u5c55\u671b","text":""},{"location":"os/lock/lock/#81","title":"8.1 \u4e0d\u540c\u5c42\u6b21\u9501\u7684\u9002\u7528\u573a\u666f","text":"\u9501\u7c7b\u578b \u9002\u7528\u573a\u666f \u4f18\u70b9 \u7f3a\u70b9 \u81ea\u65cb\u9501 \u77ed\u4e34\u754c\u533a\u3001\u591a\u6838\u7cfb\u7edf \u54cd\u5e94\u5feb\u3001\u65e0\u4e0a\u4e0b\u6587\u5207\u6362 \u6d6a\u8d39CPU\u3001\u4e0d\u9002\u5408\u957f\u65f6\u95f4\u6301\u6709 \u4e92\u65a5\u9501 \u957f\u4e34\u754c\u533a\u3001\u53ef\u7761\u7720\u4e0a\u4e0b\u6587 \u8282\u7701CPU\u3001\u652f\u6301\u4f18\u5148\u7ea7\u7ee7\u627f \u4e0a\u4e0b\u6587\u5207\u6362\u5f00\u9500 \u8bfb\u5199\u9501 \u8bfb\u591a\u5199\u5c11\u573a\u666f \u63d0\u9ad8\u8bfb\u5e76\u53d1\u6027 \u5199\u8005\u53ef\u80fd\u9965\u997f \u4e50\u89c2\u9501 \u51b2\u7a81\u5c11\u7684\u573a\u666f \u6027\u80fd\u597d\u3001\u65e0\u6b7b\u9501 \u51b2\u7a81\u65f6\u9700\u8981\u91cd\u8bd5 \u5206\u5e03\u5f0f\u9501 \u8de8\u8282\u70b9\u8d44\u6e90\u534f\u8c03 \u5168\u5c40\u4e00\u81f4\u6027 \u7f51\u7edc\u5f00\u9500\u3001\u53ef\u80fd\u7684\u5355\u70b9\u6545\u969c"},{"location":"os/lock/lock/#82","title":"8.2 \u9501\u6280\u672f\u7684\u53d1\u5c55\u8d8b\u52bf","text":""},{"location":"os/lock/lock/#_38","title":"\u786c\u4ef6\u5c42\u9762\u7684\u53d1\u5c55","text":"<ul> <li>\u66f4\u7ec6\u7c92\u5ea6\u7684\u539f\u5b50\u64cd\u4f5c\uff1a\u652f\u6301\u66f4\u5927\u6570\u636e\u7ed3\u6784\u7684\u539f\u5b50\u64cd\u4f5c</li> <li>\u786c\u4ef6\u4e8b\u52a1\u5185\u5b58(HTM)\uff1aIntel TSX\u3001IBM PowerPC\u7b49</li> <li>\u66f4\u667a\u80fd\u7684\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\uff1a\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u7f13\u5b58\u540c\u6b65</li> </ul>"},{"location":"os/lock/lock/#_39","title":"\u8f6f\u4ef6\u5c42\u9762\u7684\u4f18\u5316","text":"<ul> <li>\u81ea\u9002\u5e94\u9501\uff1a\u6839\u636e\u8fd0\u884c\u65f6\u7279\u5f81\u81ea\u52a8\u9009\u62e9\u6700\u4f18\u7684\u9501\u7b56\u7565</li> <li>\u673a\u5668\u5b66\u4e60\u4f18\u5316\uff1a\u4f7f\u7528AI\u9884\u6d4b\u9501\u7ade\u4e89\u6a21\u5f0f</li> <li>\u5f62\u5f0f\u5316\u9a8c\u8bc1\uff1a\u6570\u5b66\u8bc1\u660e\u9501\u7b97\u6cd5\u7684\u6b63\u786e\u6027</li> </ul>"},{"location":"os/lock/lock/#_40","title":"\u65b0\u5174\u6280\u672f","text":"Rust<pre><code>// Rust\u7684\u6240\u6709\u6743\u7cfb\u7edf\u5728\u7f16\u8bd1\u65f6\u9632\u6b62\u6570\u636e\u7ade\u4e89\nuse std::sync::{Arc, Mutex};\nuse std::thread;\n\nfn main() {\n    let counter = Arc::new(Mutex::new(0));\n    let mut handles = vec![];\n\n    for _ in 0..10 {\n        let counter = Arc::clone(&amp;counter);\n        let handle = thread::spawn(move || {\n            let mut num = counter.lock().unwrap();\n            *num += 1;\n        });\n        handles.push(handle);\n    }\n\n    for handle in handles {\n        handle.join().unwrap();\n    }\n\n    println!(\"Result: {}\", *counter.lock().unwrap());\n}\n</code></pre>"},{"location":"os/lock/lock/#83","title":"8.3 \u65e0\u9501\u7f16\u7a0b\u7684\u672a\u6765","text":""},{"location":"os/lock/lock/#_41","title":"\u65e0\u9501\u6570\u636e\u7ed3\u6784\u7684\u53d1\u5c55","text":"<ul> <li>\u66f4\u591a\u65e0\u9501\u7b97\u6cd5\uff1a\u65e0\u9501\u961f\u5217\u3001\u65e0\u9501\u54c8\u5e0c\u8868\u3001\u65e0\u9501\u6811</li> <li>\u5185\u5b58\u56de\u6536\u6280\u672f\uff1a\u66f4\u5b89\u5168\u9ad8\u6548\u7684\u5185\u5b58\u7ba1\u7406</li> <li>\u5f62\u5f0f\u5316\u9a8c\u8bc1\u5de5\u5177\uff1a\u786e\u4fdd\u65e0\u9501\u7b97\u6cd5\u7684\u6b63\u786e\u6027</li> </ul>"},{"location":"os/lock/lock/#_42","title":"\u7f16\u7a0b\u8bed\u8a00\u652f\u6301","text":"<ul> <li>\u66f4\u597d\u7684\u539f\u5b50\u64cd\u4f5c\u62bd\u8c61\uff1a\u7b80\u5316\u65e0\u9501\u7f16\u7a0b\u7684\u590d\u6742\u6027</li> <li>\u7f16\u8bd1\u5668\u4f18\u5316\uff1a\u81ea\u52a8\u8bc6\u522b\u548c\u4f18\u5316\u9501\u4f7f\u7528\u6a21\u5f0f</li> <li>\u9759\u6001\u5206\u6790\u5de5\u5177\uff1a\u7f16\u8bd1\u65f6\u68c0\u6d4b\u6f5c\u5728\u7684\u5e76\u53d1\u95ee\u9898</li> </ul>"},{"location":"os/lock/lock/#_43","title":"\u65b0\u7684\u5e76\u53d1\u6a21\u578b","text":"<ul> <li>Actor\u6a21\u578b\uff1a\u901a\u8fc7\u6d88\u606f\u4f20\u9012\u907f\u514d\u5171\u4eab\u72b6\u6001</li> <li>Software Transactional Memory\uff1a\u5c06\u4e8b\u52a1\u6982\u5ff5\u5f15\u5165\u5185\u5b58\u64cd\u4f5c</li> <li>Reactive Programming\uff1a\u57fa\u4e8e\u6570\u636e\u6d41\u7684\u5e76\u53d1\u5904\u7406</li> </ul> <p>\u7ed3\u8bed\uff1a \u9501\u6280\u672f\u4f5c\u4e3a\u5e76\u53d1\u7f16\u7a0b\u7684\u57fa\u7840\uff0c\u4ece\u786c\u4ef6\u7684\u539f\u5b50\u64cd\u4f5c\u5230\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u5168\u5c40\u534f\u8c03\uff0c\u5f62\u6210\u4e86\u5b8c\u6574\u7684\u6280\u672f\u6808\u3002\u968f\u7740\u591a\u6838\u5904\u7406\u5668\u7684\u666e\u53ca\u548c\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u53d1\u5c55\uff0c\u7406\u89e3\u548c\u638c\u63e1\u4e0d\u540c\u5c42\u6b21\u7684\u9501\u673a\u5236\u53d8\u5f97\u8d8a\u6765\u8d8a\u91cd\u8981\u3002\u672a\u6765\u7684\u53d1\u5c55\u8d8b\u52bf\u662f\u5411\u7740\u66f4\u667a\u80fd\u3001\u66f4\u5b89\u5168\u3001\u66f4\u9ad8\u6548\u7684\u65b9\u5411\u53d1\u5c55\uff0c\u540c\u65f6\u65b0\u7684\u7f16\u7a0b\u6a21\u578b\u548c\u8bed\u8a00\u7279\u6027\u4e5f\u5728\u4e0d\u65ad\u51cf\u5c11\u5bf9\u4f20\u7edf\u9501\u7684\u4f9d\u8d56\u3002\u638c\u63e1\u8fd9\u4e9b\u77e5\u8bc6\u4e0d\u4ec5\u6709\u52a9\u4e8e\u7f16\u5199\u9ad8\u6027\u80fd\u7684\u5e76\u53d1\u7a0b\u5e8f\uff0c\u4e5f\u4e3a\u7406\u89e3\u73b0\u4ee3\u8ba1\u7b97\u7cfb\u7edf\u7684\u5e76\u53d1\u5904\u7406\u673a\u5236\u5960\u5b9a\u4e86\u575a\u5b9e\u7684\u57fa\u7840\u3002</p>"},{"location":"os/syscall/syscall/","title":"\u7cfb\u7edf\u8c03\u7528","text":""},{"location":"os/syscall/syscall/#_2","title":"\u7cfb\u7edf\u8c03\u7528\u7684\u6d41\u7a0b","text":"<p>\u4ee5xv6\u4e3a\u4f8b\uff0c\u7406\u89e3\u7cfb\u7edf\u8c03\u7528\u7684\u6d41\u7a0b</p> <ol> <li>\u7528\u6237\u7a0b\u5e8f\u4f7f\u7528\u5e93\u51fd\u6570\uff0c\u4f8b\u5982glibc</li> <li>\u5e93\u51fd\u6570\u4e2d\u4f7f\u7528\u4e86\u7cfb\u7edf\u51fd\u6570\uff0c\u4f8b\u5982write\uff0cread\uff0c\u4e5f\u8981\u5c06\u53c2\u6570\u653e\u5230a0-a5\u3002</li> <li>\u7cfb\u7edf\u51fd\u6570\u5185\u90e8\uff0c\u5c06\u7cfb\u7edf\u8c03\u7528\u53f7\u4fdd\u5b58\u5230\u67d0\u4e2a\u5bc4\u5b58\u5668\uff08a7\uff09\uff0c\u547c\u53ebecall</li> <li>ecall\u505a\u4ee5\u4e0b\u4e8b\u60c5<ol> <li>\u4fdd\u5b58\u7528\u6237\u7684\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u4e0a\u4e0b\u6587\uff0c\u4fbf\u4e8e\u540e\u9762\u6062\u590d</li> <li>\u4fdd\u5b58\u5f53\u524d\u7a0b\u5e8f\u6307\u9488 pc \u5230sepc\uff0c\u4fdd\u5b58\u5f53\u524d\u7279\u6743\u7ea7\u522b\u5230sstatus\u7684\u7279\u5b9a\u4f4d\uff0c\u5199scause\uff0c\u4e2d\u65ad\u539f\u56e0</li> <li>\u5207\u6362\u5230\u5185\u6838\u6001\uff0c\u5173\u4e2d\u65ad</li> <li>\u8bfb\u53d6stvec, \u4e2d\u65ad\u5411\u91cf\u8868\uff0c\u627e\u5230\u4e0b\u4e00\u6b65\u8981\u53bb\u7684\u5730\u65b9 uservec</li> <li>\u8bfb\u53d6\u7cfb\u7edf\u8c03\u7528\u53f7\u7801a7\u548c\u53c2\u6570a0-a5</li> <li>\u505a\u5bf9\u5e94\u7684\u7cfb\u7edf\u8c03\u7528\u64cd\u4f5c</li> <li>\u5b8c\u6210\u540e\u6062\u590d\u7528\u6237\u4e0a\u4e0b\u6587</li> <li>\u5f00\u4e2d\u65ad</li> <li>sret \u5c06sepc\u6062\u590d\u5230pc</li> </ol> </li> <li>\u6062\u590d\u5230\u7528\u6237\u7a0b\u5e8f\uff0c\u5224\u65ad\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u7ed3\u679c</li> </ol>"},{"location":"os/syscall/syscall/#_3","title":"\u7528\u6237\u7a0b\u5e8f\u4f7f\u7528\u5e93\u51fd\u6570","text":"<p>\u53ef\u4ee5\u4f7f\u7528 strce \u770b\u81ea\u5df1\u7684\u7a0b\u5e8f\u91cc\u9762\u4f7f\u7528\u4e86\u54ea\u4e9b\u7cfb\u7edf\u8c03\u7528\u3002</p>"},{"location":"os/syscall/syscall/#_4","title":"\u5e93\u51fd\u6570\u5185\u90e8\u4f7f\u7528\u7cfb\u7edf\u8c03\u7528","text":""},{"location":"os/syscall/syscall/#_5","title":"\u8be6\u7ec6\u4ee3\u7801\u6d41\u7a0b","text":""},{"location":"os/syscall/syscall/#ecallstvecsepc","title":"ecall\uff0cstvec\uff0csepc","text":"<p>ecall\u662f\u7528\u6237\u7ea7\u522b\u7684\u6307\u4ee4\uff0c\u4e0d\u662f\u7279\u6743\u6307\u4ee4\uff0c\u7528\u6237\u6001\u53ef\u4ee5\u6267\u884c\u8fd9\u4e2a\u6307\u4ee4\u3002 sepc\u4fdd\u5b58\u5f53\u524d\u7684PC\u540e\u9762\u518d\u6062\u590d\u7684\u3002</p>"},{"location":"os/syscall/syscall/#stvec","title":"stvec","text":"<p>stvec\u5c31\u662f\u4e2d\u65ad\u5411\u91cf\u8868\u5bc4\u5b58\u5668\u3002\u4fdd\u5b58\u4e86\uff1a\u53d1\u751ftrap\u7684\u65f6\u5019\uff0c\u8981\u53bb\u54ea\u91cc\u6267\u884c\u4e2d\u65ad\u5904\u7406\u51fd\u6570\u3002</p> <p>\u8fd9\u4e2a\u5bc4\u5b58\u5668\u7528\u6700\u4f4e\u4f4d\u4fdd\u5b58\u6a21\u5f0f\uff0c\u5b83\u6709\u4e24\u79cd\u6a21\u5f0f\u3002</p> <p>\u5728riscv\u4e2d\uff0c\u8fd9\u4e2astvec\u4fdd\u5b58\u7684\u662fuservec\u8fd9\u6bb5\u6c47\u7f16\u6307\u4ee4\u7684\u5730\u5740</p>"},{"location":"os/syscall/syscall/#uservc","title":"uservc","text":"<p>uservcui\u6c47\u7f16\u6307\u4ee4\u4f1a\u5b8c\u6210\u4ee5\u4e0b\u5185\u5bb9\uff1a 1. \u4fdd\u5b58\u4e0a\u4e0b\u6587\u5230\u8fdb\u7a0b\u7684trampframe 2. \u5185\u6838\u6808\uff0c\u5185\u6838\u9875\u8868 3. \u8df3\u8f6c\u5230 usertrap</p>"},{"location":"os/syscall/syscall/#usertrap","title":"usertrap","text":""},{"location":"os/syscall/syscall/#usertrapret","title":"usertrapret","text":""},{"location":"os/syscall/syscall/#_6","title":"\u7cfb\u7edf\u8c03\u7528\u7684\u5b9e\u73b0","text":""},{"location":"os/syscall/syscall/#_7","title":"\u548c\u6587\u4ef6\u7cfb\u7edf\u6253\u4ea4\u9053","text":""},{"location":"python/collections/defaultdict_use/","title":"\u9ed8\u8ba4\u5b57\u5178","text":"<p>Python \u7684 <code>defaultdict</code> \u662f <code>collections</code> \u6a21\u5757\u4e2d\u7684\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u662f\u5b57\u5178\uff08<code>dict</code>\uff09\u7684\u4e00\u4e2a\u5b50\u7c7b\u3002<code>defaultdict</code> \u7684\u7279\u6b8a\u4e4b\u5904\u5728\u4e8e\uff0c\u5f53\u4f60\u5c1d\u8bd5\u8bbf\u95ee\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u952e\u65f6\uff0c\u5b83\u4e0d\u4f1a\u629b\u51fa <code>KeyError</code>\uff0c\u800c\u662f\u4f1a\u4f7f\u7528\u4e00\u4e2a\u9ed8\u8ba4\u503c\uff0c\u8fd9\u4e2a\u9ed8\u8ba4\u503c\u7531\u4f60\u63d0\u4f9b\u7684\u4e00\u4e2a\u5de5\u5382\u51fd\u6570\u751f\u6210\u3002</p> <p>\u4ee5\u4e0b\u662f <code>defaultdict</code> \u7684\u57fa\u672c\u7528\u6cd5\uff1a</p>"},{"location":"python/collections/defaultdict_use/#defaultdict","title":"\u5bfc\u5165 <code>defaultdict</code>","text":"Python<pre><code>from collections import defaultdict\n</code></pre>"},{"location":"python/collections/defaultdict_use/#defaultdict_1","title":"\u521b\u5efa <code>defaultdict</code>","text":"<p>\u521b\u5efa <code>defaultdict</code> \u65f6\uff0c\u4f60\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u5de5\u5382\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u5728\u5b57\u5178\u4e2d\u9700\u8981\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u952e\u65f6\u88ab\u8c03\u7528\u3002</p> Python<pre><code># \u4f7f\u7528 list \u4f5c\u4e3a\u9ed8\u8ba4\u5de5\u5382\u51fd\u6570\ndd = defaultdict(list)\n</code></pre>"},{"location":"python/collections/defaultdict_use/#defaultdict_2","title":"\u4f7f\u7528 <code>defaultdict</code>","text":"Python<pre><code># \u6dfb\u52a0\u5143\u7d20\ndd['key1'].append(1)  # \u56e0\u4e3a 'key1' \u4e0d\u5b58\u5728\uff0c\u6240\u4ee5\u9996\u5148\u4f1a\u521b\u5efa 'key1' \u5e76\u7528 [] \u4f5c\u4e3a\u9ed8\u8ba4\u503c\ndd['key1'].append(2)\n\n# \u8bbf\u95ee\u5143\u7d20\nprint(dd['key1'])  # \u8f93\u51fa: [1, 2]\n\n# \u5c1d\u8bd5\u8bbf\u95ee\u4e0d\u5b58\u5728\u7684\u952e\nprint(dd['key2'])  # \u8f93\u51fa: []\uff0c\u56e0\u4e3a 'key2' \u4e0d\u5b58\u5728\uff0c\u6240\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u7684 [] \u4f5c\u4e3a\u503c\n</code></pre>"},{"location":"python/collections/defaultdict_use/#_1","title":"\u5e38\u7528\u7684\u9ed8\u8ba4\u5de5\u5382\u51fd\u6570","text":"<ul> <li><code>list</code>: \u5f53\u4f60\u60f3\u8981\u4e00\u4e2a\u5217\u8868\u4f5c\u4e3a\u9ed8\u8ba4\u503c\u65f6\u3002</li> <li><code>set</code>: \u5f53\u4f60\u60f3\u8981\u4e00\u4e2a\u96c6\u5408\u4f5c\u4e3a\u9ed8\u8ba4\u503c\u65f6\u3002</li> <li><code>int</code>: \u5f53\u4f60\u60f3\u8981\u4e00\u4e2a\u6574\u6570\u4f5c\u4e3a\u9ed8\u8ba4\u503c\u65f6\uff0c\u901a\u5e38\u8bbe\u7f6e\u4e3a <code>int()</code>\uff0c\u5b83\u8fd4\u56de0\u3002</li> <li><code>str</code>: \u5f53\u4f60\u60f3\u8981\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f5c\u4e3a\u9ed8\u8ba4\u503c\u65f6\uff0c\u901a\u5e38\u8bbe\u7f6e\u4e3a <code>str()</code>\uff0c\u5b83\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32<code>''</code>\u3002</li> <li><code>dict</code>: \u5f53\u4f60\u60f3\u8981\u4e00\u4e2a\u5b57\u5178\u4f5c\u4e3a\u9ed8\u8ba4\u503c\u65f6\u3002</li> </ul>"},{"location":"python/collections/defaultdict_use/#set","title":"\u793a\u4f8b\uff1a\u4f7f\u7528 <code>set</code> \u4f5c\u4e3a\u9ed8\u8ba4\u5de5\u5382\u51fd\u6570","text":"Python<pre><code>from collections import defaultdict\n\n# \u4f7f\u7528 set \u4f5c\u4e3a\u9ed8\u8ba4\u5de5\u5382\u51fd\u6570\ndd = defaultdict(set)\n\n# \u6dfb\u52a0\u5143\u7d20\ndd['key1'].add('value1')\ndd['key2'].add('value2')\n\n# \u8bbf\u95ee\u5143\u7d20\nprint(dd['key1'])  # \u8f93\u51fa: {'value1'}\nprint(dd['key2'])  # \u8f93\u51fa: {'value2'}\n\n# \u5c1d\u8bd5\u8bbf\u95ee\u4e0d\u5b58\u5728\u7684\u952e\nprint(dd['key3'])  # \u8f93\u51fa: set()\uff0c\u56e0\u4e3a 'key3' \u4e0d\u5b58\u5728\uff0c\u6240\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u7684 set() \u4f5c\u4e3a\u503c\n</code></pre>"},{"location":"python/collections/defaultdict_use/#defaultdict_3","title":"\u4e3a\u4ec0\u4e48\u4f7f\u7528 <code>defaultdict</code>\uff1f","text":"<p>\u4f7f\u7528 <code>defaultdict</code> \u53ef\u4ee5\u907f\u514d\u5728\u8bbf\u95ee\u5b57\u5178\u65f6\u51fa\u73b0 <code>KeyError</code>\uff0c\u5e76\u4e14\u53ef\u4ee5\u7b80\u5316\u4ee3\u7801\uff0c\u7279\u522b\u662f\u5728\u4f60\u9700\u8981\u521d\u59cb\u5316\u5b57\u5178\u4e2d\u7684\u6bcf\u4e2a\u952e\u4e3a\u7279\u5b9a\u7c7b\u578b\u7684\u503c\u65f6\u3002</p>"},{"location":"python/collections/defaultdict_use/#_2","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li><code>defaultdict</code> \u7684\u9ed8\u8ba4\u503c\u662f\u901a\u8fc7\u5de5\u5382\u51fd\u6570\u751f\u6210\u7684\uff0c\u6bcf\u6b21\u8bbf\u95ee\u4e0d\u5b58\u5728\u7684\u952e\u65f6\u90fd\u4f1a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u6240\u4ee5\u5982\u679c\u8fd9\u4e2a\u51fd\u6570\u6709\u526f\u4f5c\u7528\uff0c\u5b83\u53ef\u80fd\u4f1a\u5f71\u54cd\u4f60\u7684\u7a0b\u5e8f\u3002</li> <li>\u4f7f\u7528 <code>defaultdict</code> \u65f6\uff0c\u8981\u786e\u4fdd\u63d0\u4f9b\u7684\u5de5\u5382\u51fd\u6570\u5728\u6bcf\u6b21\u8c03\u7528\u65f6\u90fd\u80fd\u751f\u6210\u76f8\u540c\u7684\u521d\u59cb\u503c\u3002</li> </ul>"},{"location":"redis/as_cache/cache_q/","title":"\u7f13\u5b58\u4e2d\u95f4\u4ef6","text":"<p>redis\u5e76\u4e0d\u4e00\u5b9a\u548c\u7f13\u5b58\u7ed1\u5b9a\uff0c\u4f46\u662f\u7ecf\u5e38\u88ab\u7528\u4f5c\u7f13\u5b58\u3002 \u4e0b\u9762\u662fredis\uff0c\u4f5c\u4e3a\u7f13\u5b58\u4e2d\u95f4\u4ef6\u7684\u5e38\u89c1\u95ee\u9898\u3002</p>"},{"location":"redis/as_cache/cache_q/#_2","title":"\u7f13\u5b58\u6570\u636e\u5e93","text":"<p>\u7f13\u5b58\u6570\u636e\u5e93\uff0c\u662f\u7528\u6765\u4f5c\u4e3a\u6301\u4e45\u5316\u6570\u636e\u5e93\u7684\u7f13\u5b58\u3002\u67e5\u8be2\u6570\u636e\u7684\u65f6\u5019\uff0c\u5148\u53bb\u7f13\u5b58\u67e5\u8be2\uff0c\u67e5\u4e0d\u5230\u7684\u65f6\u5019\u624d\u53bb\u6570\u636e\u5e93\u67e5\u8be2\uff0c\u8fd9\u6837\u662f\u4e3a\u4e86\u4fdd\u62a4\u6570\u636e\u5e93\u4e0d\u88ab\u5927\u91cf\u8bf7\u6c42\u3002</p>"},{"location":"redis/as_cache/cache_q/#_3","title":"\u7f13\u5b58\u7a7f\u900f","text":"<p>Redis \u7684\u7f13\u5b58\u7a7f\u900f\u662f\u6307\u5ba2\u6237\u7aef\u67e5\u8be2\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u952e\u65f6\uff0c\u7f13\u5b58\u4e2d\u6ca1\u6709\u8fd9\u4e2a\u952e\uff0c\u8bf7\u6c42\u76f4\u63a5\u7a7f\u900f\u5230\u6570\u636e\u5e93\uff0c\u5bfc\u81f4\u6570\u636e\u5e93\u9700\u8981\u5904\u7406\u5927\u91cf\u65e0\u6548\u7684\u67e5\u8be2\u8bf7\u6c42\u3002\u8fd9\u79cd\u73b0\u8c61\u901a\u5e38\u53d1\u751f\u5728\u9ad8\u5e76\u53d1\u573a\u666f\u4e0b\uff0c\u4f1a\u5bf9\u6570\u636e\u5e93\u9020\u6210\u8f83\u5927\u7684\u538b\u529b\u3002</p> <p>\u4e00\u53e5\u8bdd\uff1a\u7f13\u5b58\u6ca1\u6709\uff0c\u6570\u636e\u5e93\u4e5f\u6ca1\u6709\uff0c\u8fd4\u56de\u7a7a\u503c\u3002\u7279\u70b9\u662f\u201c\u900f\u201d\u3002 </p> <p>\u89e3\u51b3\u65b9\u6cd5 \u7a7a\u503c\u7f13\u5b58\u3001\u5e03\u9686\u8fc7\u6ee4\u5668</p>"},{"location":"redis/as_cache/cache_q/#_4","title":"\u7f13\u5b58\u96ea\u5d29","text":"<p>\u5927\u91cf\u952e\uff0c\u5728\u5f88\u77ed\u7684\u65f6\u95f4\u5185\u4e00\u8d77\u8fc7\u671f\uff0c\u7f13\u5b58\u5931\u6548\u8fdb\u4e00\u6b65\u52a0\u5267\u4e86\u540e\u7aef\u538b\u529b\uff0c\u53ef\u80fd\u5bfc\u81f4\u96ea\u5d29\u6548\u5e94\u3002</p> <p>\u89e3\u51b3\u529e\u6cd5\uff1a</p> <p>\u968f\u673a\u5316\u8fc7\u671f\u65f6\u95f4\uff1a\u4e3a\u6bcf\u4e2a\u7f13\u5b58\u8bbe\u7f6e\u4e00\u4e2a\u968f\u673a\u7684\u8fc7\u671f\u65f6\u95f4\uff0c\u907f\u514d\u5927\u91cf\u6570\u636e\u540c\u65f6\u5931\u6548\u3002 \u591a\u7ea7\u7f13\u5b58\uff1a\u5f15\u5165\u591a\u7ea7\u7f13\u5b58\u67b6\u6784\uff0c\u5982\u672c\u5730\u7f13\u5b58+\u5206\u5e03\u5f0f\u7f13\u5b58\uff0c\u51cf\u5c11\u5bf9 Redis \u7684\u4f9d\u8d56\u3002</p>"},{"location":"redis/as_cache/cache_q/#_5","title":"\u7f13\u5b58\u51fb\u7a7f","text":"<p>\u70ed\u70b9\u952e\u8fc7\u671f\u5bfc\u81f4\u5e76\u53d1\u67e5\u8be2\u6570\u636e\u5e93\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5 \u9501\u673a\u5236\u3001\u4e92\u65a5\u9501\u3001\u7f13\u5b58\u9884\u70ed</p>"}]}